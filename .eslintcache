[{"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\index.js":"1","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\reportWebVitals.js":"2","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\App.js":"3","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\Documentation.jsx":"4","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\Home.jsx":"5","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Error\\Error.jsx":"6","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\Receipt.jsx":"7","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\Trial.jsx":"8","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\SignIn\\SignIn.jsx":"9","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Dashboard.js":"10","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\CreateStore\\createStore.jsx":"11","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Loading.js":"12","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\ReceiptsCalculator.jsx":"13","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\Carousel.jsx":"14","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\GetStartedCard.jsx":"15","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\TotalTable.jsx":"16","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\ViewTable.jsx":"17","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\CreateStore\\SubscModal.js":"18","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Chart.js":"19","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Deposits.js":"20","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\listItems.js":"21","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Slider.jsx":"22","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Footer.jsx":"23","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\FootPrints.jsx":"24","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\NavBar.jsx":"25","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\HeadersTable.jsx":"26","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\ResponseTable.jsx":"27","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\BodyTable.jsx":"28","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Title.js":"29","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\IntegrationSteps.jsx":"30","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\APIsData.js":"31","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\APIs.jsx":"32","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\AboutCard.jsx":"33","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\RetailerBenefits.jsx":"34","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Avatar.jsx":"35","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Home.js":"36","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\ComingSoon.jsx":"37","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Integration.jsx":"38","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Credentials.jsx":"39","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\QrCodeModal.js":"40","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\ReceiptsTable.jsx":"41","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Functions.js":"42","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteReceipt.jsx":"43","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\SendReceipt.jsx":"44","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteAllReceipts.jsx":"45","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\HomeItems.js":"46","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteStore.jsx":"47","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\TestReceiptQr.jsx":"48","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\CreateReceipt.jsx":"49","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\index.js":"50","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\App.js":"51","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\reportWebVitals.js":"52","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Error\\Error.jsx":"53","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\Documentation.jsx":"54","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\Trial.jsx":"55","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\Home.jsx":"56","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\SignIn\\SignIn.jsx":"57","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\Receipt.jsx":"58","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Dashboard.js":"59","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\CreateStore\\createStore.jsx":"60","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\APIs.jsx":"61","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\ReceiptsCalculator.jsx":"62","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\GetStartedCard.jsx":"63","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\Carousel.jsx":"64","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\RetailerBenefits.jsx":"65","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\AboutCard.jsx":"66","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\ViewTable.jsx":"67","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\TotalTable.jsx":"68","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Loading.js":"69","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\CreateStore\\SubscModal.js":"70","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Functions.js":"71","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Home.js":"72","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\listItems.js":"73","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\FootPrints.jsx":"74","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Avatar.jsx":"75","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\TestReceiptQr.jsx":"76","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\NavBar.jsx":"77","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Footer.jsx":"78","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\IntegrationSteps.jsx":"79","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\ComingSoon.jsx":"80","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\CreateReceipt.jsx":"81","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Integration.jsx":"82","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\ReceiptsTable.jsx":"83","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteStore.jsx":"84","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteAllReceipts.jsx":"85","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\HomeItems.js":"86","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Credentials.jsx":"87","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Title.js":"88","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\SendReceipt.jsx":"89","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteReceipt.jsx":"90","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Slider.jsx":"91","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\APIsData.js":"92","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\QrCodeModal.js":"93","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\ResponseTable.jsx":"94","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\BodyTable.jsx":"95","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\HeadersTable.jsx":"96","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Income.jsx":"97","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\ContactUs\\ContactUs.jsx":"98","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\StaticVariables\\Styles.js":"99","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Analytics.jsx":"100","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\NoOfReceiptsChart.js":"101","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\NoReceiptsBarChart.jsx":"102","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\TotalSavings.jsx":"103","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\BestSellingChart.jsx":"104","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Video.jsx":"105","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\CustomizeReceipt.jsx":"106","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\PeakHoursBarChart.jsx":"107","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\index.js":"108","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\reportWebVitals.js":"109","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\App.js":"110","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Home.jsx":"111","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Error\\Error.jsx":"112","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\SignIn\\SignIn.jsx":"113","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Carousel.jsx":"114","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Loading.js":"115","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Functions.js":"116","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Footer.jsx":"117","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\NavBar.jsx":"118","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\signUp\\signUp.jsx":"119","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\signUp\\SubscModal.js":"120","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Items.jsx":"121","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\StaticVariables\\Styles.js":"122","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\ShoppingCart\\Cartt.jsx":"123","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\ShoppingCart\\CartItems.jsx":"124","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\Order.jsx":"125","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Pay\\Pay.jsx":"126","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Pay\\SubscModal.js":"127","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\UpdateInfo\\UpdateInfo.jsx":"128","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\UpdateInfo\\SubscModal.js":"129","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\OrderInfo.jsx":"130","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\AllOrders.jsx":"131","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\AllOrdersData.jsx":"132"},{"size":565,"mtime":1612467201687,"results":"133","hashOfConfig":"134"},{"size":375,"mtime":1612467201688,"results":"135","hashOfConfig":"134"},{"size":2460,"mtime":1614350533652,"results":"136","hashOfConfig":"134"},{"size":2220,"mtime":1616584578699,"results":"137","hashOfConfig":"134"},{"size":1161,"mtime":1616583421427,"results":"138","hashOfConfig":"134"},{"size":2098,"mtime":1614595011659,"results":"139","hashOfConfig":"134"},{"size":6805,"mtime":1616673579671,"results":"140","hashOfConfig":"134"},{"size":2274,"mtime":1616776770982,"results":"141","hashOfConfig":"134"},{"size":6277,"mtime":1616667904614,"results":"142","hashOfConfig":"134"},{"size":5823,"mtime":1616777569405,"results":"143","hashOfConfig":"134"},{"size":23408,"mtime":1616665854065,"results":"144","hashOfConfig":"134"},{"size":536,"mtime":1614288321537,"results":"145","hashOfConfig":"134"},{"size":1635,"mtime":1613899163977,"results":"146","hashOfConfig":"134"},{"size":3515,"mtime":1614280088823,"results":"147","hashOfConfig":"134"},{"size":1489,"mtime":1616766393069,"results":"148","hashOfConfig":"134"},{"size":1843,"mtime":1616668520029,"results":"149","hashOfConfig":"134"},{"size":5461,"mtime":1613476055710,"results":"150","hashOfConfig":"134"},{"size":4196,"mtime":1614631343365,"results":"151","hashOfConfig":"134"},{"size":1428,"mtime":1613925051556,"results":"152","hashOfConfig":"134"},{"size":844,"mtime":1613925011527,"results":"153","hashOfConfig":"134"},{"size":4585,"mtime":1616777691027,"results":"154","hashOfConfig":"134"},{"size":1796,"mtime":1613898707036,"results":"155","hashOfConfig":"134"},{"size":725,"mtime":1614939136686,"results":"156","hashOfConfig":"134"},{"size":4291,"mtime":1614942871124,"results":"157","hashOfConfig":"134"},{"size":3456,"mtime":1616777776039,"results":"158","hashOfConfig":"134"},{"size":645,"mtime":1613428903184,"results":"159","hashOfConfig":"134"},{"size":1349,"mtime":1613430374636,"results":"160","hashOfConfig":"134"},{"size":3161,"mtime":1613425080768,"results":"161","hashOfConfig":"134"},{"size":343,"mtime":1613828387000,"results":"162","hashOfConfig":"134"},{"size":13544,"mtime":1614607547942,"results":"163","hashOfConfig":"134"},{"size":8665,"mtime":1614353347348,"results":"164","hashOfConfig":"134"},{"size":7262,"mtime":1614601647744,"results":"165","hashOfConfig":"134"},{"size":5502,"mtime":1614709707065,"results":"166","hashOfConfig":"134"},{"size":3306,"mtime":1616749828281,"results":"167","hashOfConfig":"134"},{"size":787,"mtime":1614288654185,"results":"168","hashOfConfig":"134"},{"size":3236,"mtime":1614963942355,"results":"169","hashOfConfig":"134"},{"size":602,"mtime":1614607041378,"results":"170","hashOfConfig":"134"},{"size":872,"mtime":1614632708425,"results":"171","hashOfConfig":"134"},{"size":2535,"mtime":1614633129299,"results":"172","hashOfConfig":"134"},{"size":1451,"mtime":1614784639916,"results":"173","hashOfConfig":"134"},{"size":12499,"mtime":1616671471106,"results":"174","hashOfConfig":"134"},{"size":2959,"mtime":1616769205287,"results":"175","hashOfConfig":"134"},{"size":6968,"mtime":1614960101300,"results":"176","hashOfConfig":"134"},{"size":7952,"mtime":1614960148968,"results":"177","hashOfConfig":"134"},{"size":2530,"mtime":1614960157677,"results":"178","hashOfConfig":"134"},{"size":406,"mtime":1616670194168,"results":"179","hashOfConfig":"134"},{"size":2535,"mtime":1616585363252,"results":"180","hashOfConfig":"134"},{"size":4095,"mtime":1616775831742,"results":"181","hashOfConfig":"134"},{"size":13125,"mtime":1616777189322,"results":"182","hashOfConfig":"134"},{"size":565,"mtime":1612467201687,"results":"183","hashOfConfig":"184"},{"size":2602,"mtime":1616880326169,"results":"185","hashOfConfig":"184"},{"size":375,"mtime":1612467201688,"results":"186","hashOfConfig":"184"},{"size":2223,"mtime":1618668167251,"results":"187","hashOfConfig":"184"},{"size":1917,"mtime":1617042533295,"results":"188","hashOfConfig":"184"},{"size":2274,"mtime":1616776770982,"results":"189","hashOfConfig":"184"},{"size":1197,"mtime":1619114793263,"results":"190","hashOfConfig":"184"},{"size":6689,"mtime":1619126768381,"results":"191","hashOfConfig":"184"},{"size":6966,"mtime":1619127835544,"results":"192","hashOfConfig":"184"},{"size":5889,"mtime":1618760235385,"results":"193","hashOfConfig":"184"},{"size":24497,"mtime":1619129392498,"results":"194","hashOfConfig":"184"},{"size":7175,"mtime":1617041946227,"results":"195","hashOfConfig":"184"},{"size":1717,"mtime":1619112752988,"results":"196","hashOfConfig":"184"},{"size":1392,"mtime":1617031284375,"results":"197","hashOfConfig":"184"},{"size":1565,"mtime":1617027426835,"results":"198","hashOfConfig":"184"},{"size":3117,"mtime":1617031328251,"results":"199","hashOfConfig":"184"},{"size":5731,"mtime":1618756678694,"results":"200","hashOfConfig":"184"},{"size":5438,"mtime":1617031592185,"results":"201","hashOfConfig":"184"},{"size":2040,"mtime":1619127524512,"results":"202","hashOfConfig":"184"},{"size":499,"mtime":1617030736500,"results":"203","hashOfConfig":"184"},{"size":4003,"mtime":1616784021045,"results":"204","hashOfConfig":"184"},{"size":4317,"mtime":1619127917367,"results":"205","hashOfConfig":"184"},{"size":3251,"mtime":1618688177876,"results":"206","hashOfConfig":"184"},{"size":4509,"mtime":1618759470747,"results":"207","hashOfConfig":"184"},{"size":3776,"mtime":1617027938248,"results":"208","hashOfConfig":"184"},{"size":645,"mtime":1617025706212,"results":"209","hashOfConfig":"184"},{"size":4095,"mtime":1616775831742,"results":"210","hashOfConfig":"184"},{"size":3450,"mtime":1616924775638,"results":"211","hashOfConfig":"184"},{"size":683,"mtime":1617030719521,"results":"212","hashOfConfig":"184"},{"size":13659,"mtime":1616784789057,"results":"213","hashOfConfig":"184"},{"size":391,"mtime":1617032079485,"results":"214","hashOfConfig":"184"},{"size":14498,"mtime":1618940687335,"results":"215","hashOfConfig":"184"},{"size":606,"mtime":1617032267214,"results":"216","hashOfConfig":"184"},{"size":13339,"mtime":1619127258491,"results":"217","hashOfConfig":"184"},{"size":2480,"mtime":1617278268637,"results":"218","hashOfConfig":"184"},{"size":2475,"mtime":1616784652029,"results":"219","hashOfConfig":"184"},{"size":372,"mtime":1617020222618,"results":"220","hashOfConfig":"184"},{"size":2406,"mtime":1617032108886,"results":"221","hashOfConfig":"184"},{"size":343,"mtime":1617032370832,"results":"222","hashOfConfig":"184"},{"size":7673,"mtime":1617280416663,"results":"223","hashOfConfig":"184"},{"size":6919,"mtime":1619180582563,"results":"224","hashOfConfig":"184"},{"size":1701,"mtime":1619113149522,"results":"225","hashOfConfig":"184"},{"size":7929,"mtime":1619184267768,"results":"226","hashOfConfig":"184"},{"size":1386,"mtime":1617032313187,"results":"227","hashOfConfig":"184"},{"size":1324,"mtime":1617042773083,"results":"228","hashOfConfig":"184"},{"size":3064,"mtime":1617042197866,"results":"229","hashOfConfig":"184"},{"size":617,"mtime":1617042714479,"results":"230","hashOfConfig":"184"},{"size":5938,"mtime":1619182101984,"results":"231","hashOfConfig":"184"},{"size":7102,"mtime":1618989235650,"results":"232","hashOfConfig":"184"},{"size":1862,"mtime":1619181880886,"results":"233","hashOfConfig":"184"},{"size":1632,"mtime":1618994572345,"results":"234","hashOfConfig":"184"},{"size":4683,"mtime":1618989235194,"results":"235","hashOfConfig":"184"},{"size":5491,"mtime":1619182800546,"results":"236","hashOfConfig":"184"},{"size":2969,"mtime":1619182096831,"results":"237","hashOfConfig":"184"},{"size":5542,"mtime":1619181714554,"results":"238","hashOfConfig":"184"},{"size":562,"mtime":1618758855550,"results":"239","hashOfConfig":"184"},{"size":10957,"mtime":1619127430008,"results":"240","hashOfConfig":"184"},{"size":6565,"mtime":1619185919620,"results":"241","hashOfConfig":"184"},{"size":565,"mtime":1665642654993,"results":"242","hashOfConfig":"243"},{"size":375,"mtime":1665642654994,"results":"244","hashOfConfig":"243"},{"size":1637,"mtime":1665750114108,"results":"245","hashOfConfig":"243"},{"size":730,"mtime":1665675630133,"results":"246","hashOfConfig":"243"},{"size":2189,"mtime":1665684693352,"results":"247","hashOfConfig":"243"},{"size":6535,"mtime":1665753533979,"results":"248","hashOfConfig":"243"},{"size":1680,"mtime":1665658595919,"results":"249","hashOfConfig":"243"},{"size":499,"mtime":1665670927053,"results":"250","hashOfConfig":"243"},{"size":1687,"mtime":1665750033872,"results":"251","hashOfConfig":"243"},{"size":634,"mtime":1665670927048,"results":"252","hashOfConfig":"243"},{"size":5025,"mtime":1665750049942,"results":"253","hashOfConfig":"243"},{"size":10365,"mtime":1665744087959,"results":"254","hashOfConfig":"243"},{"size":959,"mtime":1665670927120,"results":"255","hashOfConfig":"243"},{"size":5738,"mtime":1665736243489,"results":"256","hashOfConfig":"243"},{"size":1858,"mtime":1665670410005,"results":"257","hashOfConfig":"243"},{"size":736,"mtime":1665674026005,"results":"258","hashOfConfig":"243"},{"size":6230,"mtime":1665736306681,"results":"259","hashOfConfig":"243"},{"size":674,"mtime":1665744637319,"results":"260","hashOfConfig":"243"},{"size":11396,"mtime":1665736699973,"results":"261","hashOfConfig":"243"},{"size":899,"mtime":1665736665008,"results":"262","hashOfConfig":"243"},{"size":11233,"mtime":1665744493439,"results":"263","hashOfConfig":"243"},{"size":776,"mtime":1665744243792,"results":"264","hashOfConfig":"243"},{"size":7836,"mtime":1665755849667,"results":"265","hashOfConfig":"243"},{"size":737,"mtime":1665745456646,"results":"266","hashOfConfig":"243"},{"size":11657,"mtime":1665757101303,"results":"267","hashOfConfig":"243"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},"fwjzb5",{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"270"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"270"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"270"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"270"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"270"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"270"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"270"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"270"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"270"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"270"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"270"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"270"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"270"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"270"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"270"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},"158dksv",{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"384"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"384"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"384"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"384"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"384"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"384"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},"1k5y6ad",{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"509"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"509"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"509"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"509"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"509"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"509"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"509"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"509"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"509"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"509"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"509"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\index.js",[],["568","569"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\reportWebVitals.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\App.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\Documentation.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\Home.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Error\\Error.jsx",["570"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/ErrorOutline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(/beatthereceipt.png)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Error(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n    <Navbar/>\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            ERROR\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h1\">\r\n            {props.errorCode}\r\n          </Typography>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          {props.errorMessage}\r\n          </Typography>\r\n          \r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  );\r\n}","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\Receipt.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\Trial.jsx",["571"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\SignIn\\SignIn.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Dashboard.js",["572","573"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\CreateStore\\createStore.jsx",["574"],"import React, { Component, useState } from 'react'\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport KeyModal from './SubscModal.js'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport { validateEmail, isLoggedIn, getWindowSize,loginLocalStorage } from '../General/Functions'\r\nimport TimeZones from '../General/StaticVariables/TimeZones.json'\r\nimport TimezonePicker from 'react-bootstrap-timezone-picker'\r\nimport 'react-bootstrap-timezone-picker/dist/react-bootstrap-timezone-picker.min.css'\r\n\r\nconst screenSize = getWindowSize()\r\n\r\nexport default class createStore extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      storeName: '',\r\n      storeAddress: '',\r\n      storeMail: '',\r\n      storeCategory: '',\r\n      storeTimezone:'',\r\n      lastSelectedCategory: '',\r\n      storeNumber: [],\r\n      password: '',\r\n      repassword: '',\r\n      passwordHidden: true,\r\n      categoryInputHidden: true,\r\n      modalShow: false,\r\n      nameAlert: false,\r\n      addressAlert: false,\r\n      categoryAlert: false,\r\n      numberAlert: false,\r\n      mailAlert: false,\r\n      timezoneAlert:false,\r\n      passwordAlert: false,\r\n      passwordAlertMsg: '',\r\n      loading: false,\r\n      subscriptionKey: '',\r\n      token: '',\r\n    }\r\n\r\n    this.handleStoreNameChange = this.handleStoreNameChange.bind(this)\r\n    this.handleStoreAddressChange = this.handleStoreAddressChange.bind(this)\r\n    this.handleStoreMailChange = this.handleStoreMailChange.bind(this)\r\n    this.handleStoreCategoryChange = this.handleStoreCategoryChange.bind(this)\r\n    this.handleStoreNumberChange = this.handleStoreNumberChange.bind(this)\r\n    this.handleStoreTimezoneChange = this.handleStoreTimezoneChange.bind(this)\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n    this.handleRepasswordChange = this.handleRepasswordChange.bind(this)\r\n  }\r\n  \r\n  handleStoreNameChange(event) {\r\n    this.setState({ storeName: event.target.value, nameAlert: false })\r\n  }\r\n\r\n  handleStoreAddressChange(event) {\r\n    this.setState({ storeAddress: event.target.value, addressAlert: false })\r\n  }\r\n  handleStoreMailChange(event) {\r\n    this.setState({ storeMail: event.target.value, mailAlert: false })\r\n  }\r\n  handleStoreTimezoneChange(timezone) {\r\n    this.setState({ storeTimezone: timezone, timezoneAlert: false })\r\n  }\r\n  handleStoreCategoryChange(event) {\r\n    this.setState({ storeCategory: event.target.value, categoryAlert: false })\r\n  }\r\n  handleStoreNumberChange(event) {\r\n    this.setState({ storeNumber: event.target.value, numberAlert: false })\r\n  }\r\n  handlePasswordChange(event) {\r\n    this.setState({ password: event.target.value, passwordAlert: false })\r\n  }\r\n  handleRepasswordChange(event) {\r\n    this.setState({ repassword: event.target.value, passwordAlert: false })\r\n  }\r\n  handlePasswordVisibility() {\r\n    alert('ss')\r\n    this.setState({ passwordHidden: !this.state.passwordHidden })\r\n  }\r\n\r\n  /////////////////////////////////////////////multiple phone numbers//////\r\n  handleText = (i) => (e) => {\r\n    let { storeNumber } = this.state\r\n    storeNumber = [...storeNumber]\r\n    storeNumber[i] = e\r\n    this.setState({\r\n      storeNumber,\r\n    })\r\n  }\r\n\r\n  handleDelete = (i) => (e) => {\r\n    e.preventDefault()\r\n    let { storeNumber } = this.state\r\n    storeNumber = [...storeNumber.slice(0, i), ...storeNumber.slice(i + 1)]\r\n    this.setState({\r\n      storeNumber,\r\n    })\r\n  }\r\n\r\n  addNumber = (e) => {\r\n    e.preventDefault()\r\n    this.setState({ numberAlert: false })\r\n    if (this.state.storeNumber.length < 4) {\r\n      let { storeNumber } = this.state\r\n      storeNumber = storeNumber.concat([''])\r\n      this.setState({\r\n        storeNumber,\r\n      })\r\n    } else {\r\n      toast.error('Maximum 4 phone numbers')\r\n    }\r\n  }\r\n  ////////////////////////////////////////////\r\n\r\n  validatePassword() {\r\n    if (this.state.password !== this.state.repassword) {\r\n      this.setState({ passwordAlertMsg: `Passwords didn't match.` })\r\n      return false\r\n    } else if (this.state.password.length < 8) {\r\n      this.setState({\r\n        passwordAlertMsg: `Password should contain at least 8 characters`,\r\n      })\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  sendCredentialsToMail = (key, token) => {\r\n    axios\r\n      .post(`${staticVariables.backendURL}/api/storesInfo/sendMail`, {\r\n        storeInfo: {\r\n          phoneNumbers: [this.state.storeNumber],\r\n          address: this.state.storeAddress,\r\n          storeName: this.state.storeName,\r\n          category: this.state.storeCategory,\r\n        },\r\n        mail: this.state.storeMail,\r\n        key: key,\r\n        token: token,\r\n      })\r\n      .then((response) => {\r\n        toast.success('A token and an ID has been sent to your email')\r\n      })\r\n      .catch((error) => {\r\n        toast.error(`OOPS!! Couldn't send credentials to mail`)\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isLoggedIn()) {\r\n      window.location.href = '/store/dashboard'\r\n    }\r\n  }\r\n\r\n  async submitStore(e) {\r\n    e.preventDefault() //to avoid reloading page\r\n    e.stopPropagation()\r\n    this.setState({\r\n      nameAlert: false,\r\n      addressAlert: false,\r\n      categoryAlert: false,\r\n      numberAlert: false,\r\n      mailAlert: false,\r\n      passwordAlert: false,\r\n      timezoneAlert:false,\r\n    })\r\n    if (this.state.storeName === '') {\r\n      this.setState({ nameAlert: true })\r\n    }\r\n    if (this.state.storeAddress === '') {\r\n      this.setState({ addressAlert: true })\r\n    }\r\n    if (this.state.storeCategory === '') {\r\n      this.setState({ categoryAlert: true })\r\n    }\r\n    if (this.state.storeTimezone === '') {\r\n      this.setState({ timezoneAlert: true })\r\n    }\r\n    if (this.state.storeNumber.length < 1) {\r\n      this.setState({ numberAlert: true })\r\n    }\r\n    if (!validateEmail(this.state.storeMail)) {\r\n      this.setState({ mailAlert: true })\r\n    }\r\n    if (!this.validatePassword()) {\r\n      this.setState({ passwordAlert: true })\r\n    }\r\n    if (\r\n      this.state.storeName !== '' &&\r\n      this.state.storeAddress !== '' &&\r\n      this.state.storeCategory !== '' &&\r\n      this.state.storeTimezone !== '' &&\r\n      validateEmail(this.state.storeMail) &&\r\n      this.state.storeNumber.length >= 1 &&\r\n      this.validatePassword()\r\n    ) {\r\n      this.setState({ loading: true, modalShow: true })\r\n      await axios\r\n        .post(`${staticVariables.backendURL}/api/storesInfo/create`, {\r\n          phoneNumbers: this.state.storeNumber,\r\n          address: this.state.storeAddress,\r\n          storeName: this.state.storeName,\r\n          category: this.state.storeCategory,\r\n          mail: this.state.storeMail,\r\n          password: this.state.password,\r\n          timeZone: this.state.storeTimezone\r\n        })\r\n        .then((response) => {\r\n          this.setState({\r\n            subscriptionKey: response.data.id,\r\n            loading: false,\r\n            token: response.data.token,\r\n          })\r\n          // localStorage.setItem('token', response.data.token)\r\n          // localStorage.setItem('key', response.data.id)\r\n          // localStorage.setItem('password', this.state.password)\r\n          loginLocalStorage(response.data.token,response.data.id,this.state.password,this.state.storeTimezone)\r\n          this.sendCredentialsToMail(response.data.id, response.data.token)\r\n        })\r\n        .catch((error) => {\r\n          toast.error(`OOPS!! Something went wrong. Try again`)\r\n          this.setState({ modalShow: false, loading: false })\r\n          console.log(error)\r\n        })\r\n    }\r\n  }\r\n  callbackFunction = (value) => {\r\n    this.setState({ modalShow: value })\r\n    window.location.href = '/store/dashboard'\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={bgImage}>\r\n        <Navbar />\r\n        <div class=\"signin-background\" style={minHeight}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                <div class=\"card card-signin my-5\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-center\">Subscription</h5>\r\n                    <form class=\"form-signin\">\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreName\">Store Name</label>\r\n                        <input\r\n                          id=\"inputStoreName\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter Store Name\"\r\n                          onChange={this.handleStoreNameChange}\r\n                          value={this.state.storeName}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.nameAlert}>\r\n                          Store Name can't be empty!\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreAddress\">Store Address</label>\r\n                        <input\r\n                          id=\"inputStoreAddress\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter Store Address\"\r\n                          onChange={this.handleStoreAddressChange}\r\n                          value={this.state.storeAddress}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.addressAlert}>\r\n                          Store address can't be empty!\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreEmail\">Store Email</label>\r\n                        <input\r\n                          id=\"inputStoreAddress\"\r\n                          type=\"email\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter Store Email\"\r\n                          onChange={this.handleStoreMailChange}\r\n                          value={this.state.storeMail}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.mailAlert}>\r\n                          Invalid Email address!\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreNumber\">\r\n                          Store phone Numbers\r\n                        </label>\r\n                        <IconButton\r\n                          aria-label=\"delete\"\r\n                          onClick={this.addNumber}\r\n                        >\r\n                          <AddCircleIcon color=\"primary\" />\r\n                        </IconButton>\r\n                        <Alert variant=\"danger\" show={this.state.numberAlert}>\r\n                          You should enter at least one correct number\r\n                        </Alert>\r\n                        {this.state.storeNumber.map((number, index) => (\r\n                          <span key={index}>\r\n                            <div style={sideByside}>\r\n                            <div style={sideByside}>\r\n                              <PhoneInput\r\n                                country={'eg'}\r\n                                enableSearch=\"true\"\r\n                                onChange={this.handleText(index)}\r\n                                value={number}\r\n                              />\r\n                              </div>\r\n                            {/* </div>\r\n                            <div style={sideByside}> */}\r\n                            <div style={sideByside}>\r\n                              <IconButton\r\n                                aria-label=\"delete\"\r\n                                onClick={this.handleDelete(index)}\r\n                              >\r\n                                <HighlightOffIcon color=\"secondary\" />\r\n                              </IconButton>\r\n                            </div>\r\n                            </div>\r\n                          </span>\r\n                        ))}\r\n\r\n                        <ToastContainer\r\n                          position=\"top-right\"\r\n                          autoClose={3000}\r\n                          hideProgressBar={false}\r\n                          newestOnTop={false}\r\n                          closeOnClick\r\n                          rtl={false}\r\n                          pauseOnFocusLoss\r\n                          draggable\r\n                          pauseOnHover\r\n                        />\r\n                      </div>\r\n\r\n                      <br />\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreCategory\">Store Category</label>\r\n\r\n                        <div>\r\n                          <ToggleButtonGroup\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                            //   defaultValue={this.state.storeCategory}\r\n                            onChange={(value) =>\r\n                              this.setState({\r\n                                storeCategory: value,\r\n                                lastSelectedCategory: value,\r\n                                categoryAlert: false,\r\n                              })\r\n                            }\r\n                          >\r\n                            <ToggleButton\r\n                              disabled={!this.state.categoryInputHidden}\r\n                              variant=\"outline-info\"\r\n                              value={'food'}\r\n                            >\r\n                              Food\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                              disabled={!this.state.categoryInputHidden}\r\n                              variant=\"outline-info\"\r\n                              value={'grocery'}\r\n                            >\r\n                              Grocery\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                              disabled={!this.state.categoryInputHidden}\r\n                              variant=\"outline-info\"\r\n                              value={'medical'}\r\n                            >\r\n                              Medical\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                              disabled={!this.state.categoryInputHidden}\r\n                              variant=\"outline-info\"\r\n                              value={'clothes'}\r\n                            >\r\n                              Clothes\r\n                            </ToggleButton>\r\n                          </ToggleButtonGroup>\r\n                        </div>\r\n                        <div class=\"custom-control custom-checkbox mb-3\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            class=\"custom-control-input\"\r\n                            id=\"customCheck1\"\r\n                            onChange={() => {\r\n                              this.setState({\r\n                                storeCategory: this.state.categoryInputHidden\r\n                                  ? ''\r\n                                  : this.state.lastSelectedCategory,\r\n                                categoryInputHidden: !this.state\r\n                                  .categoryInputHidden,\r\n                              })\r\n                            }}\r\n                          />\r\n                          <label\r\n                            class=\"custom-control-label\"\r\n                            for=\"customCheck1\"\r\n                          >\r\n                            Other category\r\n                          </label>\r\n                        </div>\r\n                        <input\r\n                          id=\"inputStoreCategory\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter Store Category\"\r\n                          onChange={this.handleStoreCategoryChange}\r\n                          value={this.state.storeCategory}\r\n                          hidden={this.state.categoryInputHidden}\r\n                          required={!this.state.categoryInputHidden}\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.categoryAlert}>\r\n                          Store category can't be empty!\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreTimeZone\">Store Timezone</label><br/>\r\n                        <TimezonePicker\r\n                          absolute={true}\r\n                          // defaultValue=\"Europe/Moscow\"\r\n                          placeholder=\"Select timezone...\"\r\n                          onChange={this.handleStoreTimezoneChange}\r\n                          timezones={TimeZones}\r\n                          style={{width:\"100%\"}}\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.timezoneAlert}>\r\n                          Store Timezone can't be empty!\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreAddress\">Password</label>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <FormControl\r\n                            id=\"inputStorePassword\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Enter Password\"\r\n                            onChange={this.handlePasswordChange}\r\n                            value={this.state.password}\r\n                            type={\r\n                              this.state.passwordHidden ? 'password' : 'text'\r\n                            }\r\n                            required\r\n                            autofocus\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"outline-info\"\r\n                              onClick={() =>\r\n                                this.setState({\r\n                                  passwordHidden: !this.state.passwordHidden,\r\n                                })\r\n                              }\r\n                            >\r\n                              {this.state.passwordHidden ? (\r\n                                <VisibilityIcon />\r\n                              ) : (\r\n                                <VisibilityOffIcon />\r\n                              )}\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </div>\r\n                      <div class=\"form-label-group\">\r\n                        <label for=\"inputStoreAddress\">Re-enter Password</label>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <FormControl\r\n                            id=\"inputStoreRepassword\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Re-Enter Password\"\r\n                            onChange={this.handleRepasswordChange}\r\n                            value={this.state.repassword}\r\n                            type={\r\n                              this.state.passwordHidden ? 'password' : 'text'\r\n                            }\r\n                            required\r\n                            autofocus\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"outline-info\"\r\n                              onClick={() =>\r\n                                this.setState({\r\n                                  passwordHidden: !this.state.passwordHidden,\r\n                                })\r\n                              }\r\n                            >\r\n                              {this.state.passwordHidden ? (\r\n                                <VisibilityIcon />\r\n                              ) : (\r\n                                <VisibilityOffIcon />\r\n                              )}\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n\r\n                        <Alert variant=\"danger\" show={this.state.passwordAlert}>\r\n                          {this.state.passwordAlertMsg}\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n                      <button\r\n                        class=\"btn btn-lg btn-info btn-block text-uppercase\"\r\n                        type=\"submit\"\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault()\r\n                          e.stopPropagation()\r\n                        }}\r\n                        onClick={(e) => this.submitStore(e)}\r\n                      >\r\n                        Subscribe\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <KeyModal\r\n                show={this.state.modalShow}\r\n                storeName={this.state.storeName}\r\n                loading={this.state.loading}\r\n                sKey={this.state.subscriptionKey}\r\n                token={this.state.token}\r\n                parentCallback={this.callbackFunction}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst bgImage = {\r\n  backgroundImage: `url(/beatthereceipt.png)`,\r\n  'background-repeat': 'no-repeat',\r\n  'background-attachment': 'fixed',\r\n  'background-size': 'cover',\r\n  'min-height': `${screenSize.height}px`,\r\n}\r\n\r\nconst sideByside = {\r\n  // display:'inline-block',\r\n  float: 'left',\r\n}\r\n\r\nconst minHeight = {\r\n  'min-height': `${screenSize.height}px`,\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Loading.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\ReceiptsCalculator.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\Carousel.jsx",["575","576"],"import React, { Component } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport PublicIcon from '@material-ui/icons/Public'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nexport default class HomeCarousel extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <Carousel>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/btrHome1.png\"\r\n                alt=\"First slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                <h3\r\n                  style={{ cursor: 'pointer' }}\r\n                  //   onClick={(e) =>\r\n                  //     this.props.history.push('/tourist/requestTrip')\r\n                  //   }\r\n                >\r\n                  <b>Digital Receipt</b>\r\n                </h3>\r\n                <p>Replace your paper receipts with Digital receipts.</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/btrHome2.png\"\r\n                alt=\"Second slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                {/* <h3\r\n                  style={{ cursor: 'pointer' }}\r\n                  //   onClick={(e) =>\r\n                  //     this.props.history.push('/tourist/TouristRequestedTrips')\r\n                  //   }\r\n                >\r\n                  <b>Enough cutting trees</b>\r\n                </h3> */}\r\n                {/* <p style={{backgroundColor:'#00EA71' }}>\r\n                  According to{' '}\r\n                  <a href={staticVariables.references.greenAmericaURL} target=\"_blank\">\r\n                    Green America\r\n                  </a>\r\n                  , Every year in the US, paper receipt use consumes over 3\r\n                  million trees, 9 billion gallons of water, and generates over\r\n                  4 billion pounds of CO2 and 302 million pounds of solid waste.\r\n                </p> */}\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            \r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/btrHome5.png\"\r\n                alt=\"Fourth slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                {/* <h3\r\n                  style={{ cursor: 'pointer'}}\r\n                  //   onClick={(e) =>\r\n                  //     this.props.history.push('/tourist/UpcomingTrips')\r\n                  //   }\r\n                >\r\n                  <b><PublicIcon fontSize=\"large\" /> The World needs a change</b>\r\n                </h3> */}\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src=\"/btrHome3.png\"\r\n                alt=\"Third slide\"\r\n              />\r\n              <Carousel.Caption>\r\n                {/* <h3\r\n                  style={{ cursor: 'pointer'}}\r\n                  //   onClick={(e) =>\r\n                  //     this.props.history.push('/tourist/UpcomingTrips')\r\n                  //   }\r\n                >\r\n                  <b><PublicIcon fontSize=\"large\" /> The World needs a change</b>\r\n                </h3> */}\r\n                {/* <p>The World needs a change.</p> */}\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </header>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\GetStartedCard.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\TotalTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Receipt\\ViewTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\CreateStore\\SubscModal.js",["577"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nconst KeyModal = (props) => {\r\n  // const [show, setShow] = useState(props.show);\r\n  var show = props.show\r\n  const handleClose = () => \r\n    (sendDataToParentComponent(false))\r\n  const handleShow = () => (show = true)\r\n  // toast(\"An email with the token and the ID has been sent to your email\",{type:'success'})\r\n  // const handleShowAlert = () => (showAlert = true);\r\n  const [alertt, setAlert] = useState(false)\r\n  const [alertt2, setAlert2] = useState(false)\r\n  const sendDataToParentComponent = (data) => {\r\n    props.parentCallback(data)\r\n  }\r\n  if (props.loading) {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        // onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          <Modal.Title>{props.storeName} Subscription</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Please save your subscription key and token as you will need it later\r\n          while using our API's.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Modal.Body>\r\n            <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n          </Modal.Body>\r\n\r\n          <br />\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={show}\r\n          // onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton onHide={handleClose}>\r\n            <Modal.Title>{props.storeName} Subscription</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Please save your subscription key and token as you will need it\r\n            later while using our API's.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Modal.Body>Subscription Key:</Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                id=\"subs\"\r\n                class=\"form-control\"\r\n                placeholder=\"subscription\"\r\n                value={props.sKey}\r\n                disabled=\"true\"\r\n                autofocus\r\n              />\r\n              <InputGroup.Append>\r\n                <CopyToClipboard\r\n                  text={props.sKey}\r\n                  onCopy={() => {\r\n                    setAlert2(true)\r\n                    setAlert(false)\r\n                  }}\r\n                >\r\n              <Button variant=\"info\">\r\n                  <FileCopyOutlinedIcon />\r\n                </Button>\r\n                </CopyToClipboard>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            <Alert variant=\"success\" show={alertt2}>\r\n              Copied to clipboard\r\n            </Alert>\r\n            \r\n          </Modal.Footer>\r\n          <Modal.Footer>\r\n            <Modal.Body>Subscription Token:</Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n            <textarea\r\n              name=\"message\"\r\n              rows=\"3\"\r\n              class=\"form-control\"\r\n              value={props.token}\r\n              disabled=\"true\"\r\n              autofocus\r\n            />\r\n            <InputGroup.Append>\r\n            <CopyToClipboard\r\n              text={props.token}\r\n              onCopy={() => {\r\n                setAlert2(false)\r\n                setAlert(true)\r\n              }}\r\n            >\r\n              <button class=\"btn btn-lg btn-info  text-uppercase\">\r\n                <FileCopyOutlinedIcon />\r\n              </button>\r\n            </CopyToClipboard>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            <Alert variant=\"success\" show={alertt}>\r\n              Copied to clipboard\r\n            </Alert>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default KeyModal\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Chart.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Deposits.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\listItems.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Slider.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Footer.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\FootPrints.jsx",["578","579","580","581"],"import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport {ApproximateToNthDigit} from '../General/Functions'\r\n\r\n\r\n\r\nconst receiptCost = 0.015\r\nexport default class CalculatorCardDeck extends Component {\r\n  calculateAnnualReceiptCost(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(\r\n      numberOfReceiptsPerDay * receiptCost * 365,\r\n      1\r\n    )\r\n  }\r\n\r\n  calculateAnnualCo2(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(this.calculateAnnualTrees(numberOfReceiptsPerDay)*22,1)\r\n  }\r\n\r\n  calculateAnnualTrees(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(numberOfReceiptsPerDay * 0.0001 * 365, 1)\r\n  }\r\n\r\n  numberWithCommas(number) {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: '90%', 'margin-left': 'auto', 'margin-right': 'auto' }}\r\n      >\r\n        <CardDeck>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title style={{\r\n                  textAlign:'center',\r\n                }}>\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualCo2(this.props.receiptsPerDay)\r\n                )}\r\n                Kg\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/CO2Footprint.png\" />\r\n              {/* <Card.Text>\r\n              As  0.025 gram of Co2e per each paper receipt{' '}\r\n              </Card.Text> */}\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                As 1 tree can take up about 22Kg of Co2 over 1 year, according to{' '}\r\n                <a\r\n                  href={staticVariables.references.co2PerReceipt}\r\n                  target=\"_blank\"\r\n                >\r\n                  European Environment Agency\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title\r\n                style={{\r\n                  textAlign:'center',\r\n                }}\r\n              >\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualTrees(this.props.receiptsPerDay)\r\n                )}{' '}\r\n                Tree\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/cuttedTrees.png\" />\r\n              {/* <Card.Text>\r\n                As average cost of 1 paper receipt is $0.015 (or 1.5 cents){' '}\r\n              </Card.Text> */}\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                Estimated number of trees you could save, according to{' '}\r\n                <a\r\n                  href={staticVariables.references.treesPerReceipt}\r\n                  target=\"_blank\"\r\n                >\r\n                  Ribble-pack\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title\r\n                style={{\r\n                  textAlign:'center',\r\n                }}\r\n              >\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualReceiptCost(this.props.receiptsPerDay)\r\n                )}\r\n                $\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/moneyBag.png\" />\r\n              {/* <Card.Text>\r\n                As average cost of 1 paper receipt is $0.015 (or 1.5 cents){' '}\r\n              </Card.Text> */}\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                As average cost of 1 paper receipt is $0.015 (1.5 cents),\r\n                according to{' '}\r\n                <a\r\n                  href={staticVariables.references.receiptCost}\r\n                  target=\"_blank\"\r\n                >\r\n                  FMI\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n  cardStyle: {\r\n    width: '75%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n    backgroundColor: '#F8F9F9',\r\n  },\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\NavBar.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\HeadersTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\ResponseTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\BodyTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Title.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\IntegrationSteps.jsx",["582","583","584","585","586","587"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport Step from '@material-ui/core/Step'\r\nimport StepButton from '@material-ui/core/StepButton'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport createReceipt from './createReceipt.PNG'\r\nimport sendRecipt from './send.PNG'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}))\r\n\r\nfunction getSteps(loggedin) {\r\n  if (!loggedin)\r\n    return [\r\n      'Subscribe',\r\n      'Try creating a receipt',\r\n      'Show receipt QrCode',\r\n      'Try sending the receipt by mail',\r\n    ]\r\n  else\r\n    return [\r\n      'Try creating a receipt',\r\n      'Show receipt QrCode',\r\n      'Try sending the receipt by mail',\r\n    ]\r\n}\r\nfunction notify() {\r\n  toast.success('Copied to clipboard')\r\n}\r\n\r\nfunction getStepContent(step, classes, loggedin) {\r\n  if (!loggedin) {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Typography>\r\n            Kindly go to our{' '}\r\n            <a href=\"/subscribe\" target=\"_blank\">\r\n              subscription page\r\n            </a>{' '}\r\n            and fill in your data to be provided with your store key and the\r\n            token you are going to use to access our APIs.\r\n          </Typography>\r\n        )\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Make a post request with a body and a header like what in the APIs\r\n              below and here is an example code.\r\n            </p>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Code example using javascript and axios\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img style={{ width: '100%' }} src={createReceipt}></img>\r\n              </AccordionDetails>\r\n              <CopyToClipboard text={createReceiptCodeSample} onCopy={notify}>\r\n                <button\r\n                  style={{\r\n                    width: '12%',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                  }}\r\n                  class=\"btn btn-lg btn-block  btn-info  text-uppercase\"\r\n                >\r\n                  Copy\r\n                  <FileCopyOutlinedIcon />\r\n                </button>\r\n              </CopyToClipboard>\r\n\r\n              <br />\r\n            </Accordion>\r\n          </div>\r\n        )\r\n      case 2:\r\n        return 'After creating the receipt, you receive a qrCode image and the receipt id as a response. You could take the qrCode from the responce and set it as an src of an img (HTML component). i.e (<img src={res.data.qrCode}></img>)'\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <Typography>\r\n              After creating the receipt and receiving the receipt id in the\r\n              response, you could use this id and the email of the customer (you\r\n              want to send the receipt by email to) in the body of a post\r\n              request you could make using our APIs, and here is an example\r\n              code.\r\n            </Typography>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Code example using javascript and axios\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img style={{ width: '100%' }} src={sendRecipt}></img>\r\n              </AccordionDetails>\r\n              <CopyToClipboard text={sendMailCodeSample} onCopy={notify}>\r\n                <button\r\n                  style={{\r\n                    width: '12%',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                  }}\r\n                  class=\"btn btn-lg btn-block  btn-info  text-uppercase\"\r\n                >\r\n                  Copy\r\n                  <FileCopyOutlinedIcon />\r\n                </button>\r\n              </CopyToClipboard>\r\n\r\n              <br />\r\n            </Accordion>\r\n          </div>\r\n        )\r\n      default:\r\n        return 'Unknown step'\r\n    }\r\n  } else {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Make a post request with a body and a header like what in the APIs\r\n              below and here is an example code.\r\n            </p>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Code example using javascript and axios\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img style={{ width: '100%' }} src={createReceipt}></img>\r\n              </AccordionDetails>\r\n              <CopyToClipboard text={createReceiptCodeSample} onCopy={notify}>\r\n                <button\r\n                  style={{\r\n                    width: '12%',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                  }}\r\n                  class=\"btn btn-lg btn-block  btn-info  text-uppercase\"\r\n                >\r\n                  Copy\r\n                  <FileCopyOutlinedIcon />\r\n                </button>\r\n              </CopyToClipboard>\r\n\r\n              <br />\r\n            </Accordion>\r\n          </div>\r\n        )\r\n      case 1:\r\n        return 'After creating the receipt, you receive a qrCode image and the receipt id as a responce. You could take the qrCode from the responce and set it as an src of an img (HTML component). i.e (<img src={res.data.qrCode}></img>)'\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <Typography>\r\n              After creating the receipt and receiving the receipt id in the\r\n              response, you could use this id and the email of the customer (you\r\n              want to send the receipt by email to) in the body of a post\r\n              request you could make using our APIs, and here is an example code\r\n              using javascript and axios.\r\n            </Typography>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Code example using javascript and axios\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img style={{ width: '100%' }} src={sendRecipt}></img>\r\n              </AccordionDetails>\r\n              <CopyToClipboard text={sendMailCodeSample} onCopy={notify}>\r\n                <button\r\n                  style={{\r\n                    width: '12%',\r\n                    marginRight: 'auto',\r\n                    marginLeft: 'auto',\r\n                  }}\r\n                  class=\"btn btn-lg btn-block  btn-info  text-uppercase\"\r\n                >\r\n                  Copy\r\n                  <FileCopyOutlinedIcon />\r\n                </button>\r\n              </CopyToClipboard>\r\n\r\n              <br />\r\n            </Accordion>\r\n          </div>\r\n        )\r\n      default:\r\n        return 'Unknown step'\r\n    }\r\n  }\r\n}\r\n\r\nexport default function IntegrationSteps(props) {\r\n  const classes = useStyles()\r\n  const [activeStep, setActiveStep] = React.useState(0)\r\n  const [completed, setCompleted] = React.useState({})\r\n  const steps = getSteps(props.loggedin)\r\n\r\n  const totalSteps = () => {\r\n    return steps.length\r\n  }\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length\r\n  }\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1\r\n  }\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps()\r\n  }\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? // It's the last step, but not all steps have been completed,\r\n          // find the first step that has been completed\r\n          steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1\r\n    setActiveStep(newActiveStep)\r\n  }\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\r\n  }\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step)\r\n  }\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed\r\n    newCompleted[activeStep] = true\r\n    setCompleted(newCompleted)\r\n    handleNext()\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0)\r\n    setCompleted({})\r\n  }\r\n\r\n  const checkSubscribe = () => {\r\n    alert('herr')\r\n    const newCompleted = completed\r\n    newCompleted[0] = true\r\n    setCompleted(newCompleted)\r\n    handleNext()\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Integration Steps</h1>\r\n      {checkSubscribe}\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton\r\n              onClick={handleStep(index)}\r\n              completed={completed[index]}\r\n            >\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {allStepsCompleted() ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              {getStepContent(activeStep, classes, props.loggedin)}\r\n            </Typography>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.button}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                  // <Button\r\n                  //   variant=\"contained\"\r\n                  //   color=\"primary\"\r\n                  //   onClick={handleComplete}\r\n                  // >\r\n                  //   {completedSteps() === totalSteps() - 1\r\n                  //     ? 'Finish'\r\n                  //     : 'Complete Step'}\r\n                  // </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst createReceiptCodeSample = ` \r\naxios\r\n.post(\r\nstaticVariables.BTRapi+\"/receipts/create\",\r\n{  storeId:storeId,//the store key returned for you from after subscription\r\nreceipt:{ \r\n  vatPercentage:0,//value added taxes if it exists \r\n  items:this.state.lineItems// an array of products \r\n       }}\r\n,\r\n //create authToken key in the request header and set its value with the token returned for you from after subscription\r\n{headers: { authToken : token }}\r\n)\r\n.then(res => {\r\nthis.setState({ \r\n//the response provides you with the receipt id and the qr code image as a link to use as an image src\r\n             id: res.data.id ,\r\n             qr: res.data.qrCode\r\n           })\r\n})\r\n.catch(error => {\r\nalert(error.message)\r\n})`\r\nconst sendMailCodeSample = `await axios\r\n.post(staticVariables.BTRapi+\"/receipts/sendMail\", \r\n{\r\n  mail: this.state.mail,// the email you want to send the receipt to\r\n  receiptId: this.state.id // the receipt id that was returned in the response of creating the receipt\r\n}\r\n,\r\n //create authToken key in the request header and set its value with the token returned for you from after subscription\r\n{headers: { authToken : token }})\r\n.then((res)=>{\r\n  alert(\"sent successfully!\")\r\n  \r\n})\r\n.catch(error => {\r\n  alert(error.message)\r\n})`\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\APIsData.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Documentation\\APIs.jsx",["588"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport AccordionBootstrap from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport HeadersTable from './HeadersTable.jsx'\r\nimport BodyTable from './BodyTable.jsx'\r\nimport ResponseTable from './ResponseTable.jsx'\r\nimport APIData from './APIsData.js'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    'font-weight': 'bold',\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n}))\r\n\r\nconst apiaccordianColor = '#ececec'\r\nexport default function Api() {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  const notify = () => toast.success('Copied to clipboard')\r\n\r\n  const handleBadge = (method) => {\r\n    switch (method.toLowerCase()) {\r\n      case 'post':\r\n        return 'success'\r\n      case 'delete':\r\n        return 'danger'\r\n      case 'get':\r\n        return 'primary'\r\n      case 'update':\r\n        return 'info'\r\n      default:\r\n        return 'dark'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1 style={{ display: 'inline' }}>APIs </h1>{' '}\r\n      <h2 style={{ display: 'inline', color: 'gray', fontSize: '1em' }}>\r\n        {staticVariables.backendURL}/{`{url_of_needed_api}`}\r\n      </h2>\r\n      <br />\r\n      <br />\r\n      {APIData.map((api) => (\r\n        <Accordion\r\n          expanded={expanded === `panel${APIData.indexOf(api)}`}\r\n          onChange={handleChange(`panel${APIData.indexOf(api)}`)}\r\n        >\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1bh-content\"\r\n            id=\"panel1bh-header\"\r\n          >\r\n            <Typography className={classes.heading}>{api.title}</Typography>\r\n\r\n            <Typography className={classes.secondaryHeading}>\r\n              <Badge pill variant={handleBadge(api.method)}>\r\n                {api.method}\r\n              </Badge>\r\n              {'      '}\r\n              {api.URL}\r\n            </Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Typography style={typography}>\r\n              <AccordionBootstrap defaultActiveKey=\"0\">\r\n                {api.headers && (\r\n                  <Accordion style={{ backgroundColor: apiaccordianColor }}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        Headers\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <HeadersTable headers={api.headers} />\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                )}\r\n                {api.body && (\r\n                  <Card>\r\n                    <Accordion style={{ backgroundColor: apiaccordianColor }}>\r\n                      <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                      >\r\n                        <Typography className={classes.heading}>\r\n                          Body\r\n                        </Typography>\r\n                      </AccordionSummary>\r\n                      <AccordionDetails>\r\n                        <Card.Body>\r\n                          <BodyTable body={api.body} />\r\n                          <Card\r\n                            style={{\r\n                              width: '50%',\r\n                              marginLeft: 'auto',\r\n                              marginRight: 'auto',\r\n                            }}\r\n                          >\r\n                            <Card.Header as=\"h5\">Body Example</Card.Header>\r\n                            <Card.Body>\r\n                              <Card.Text>\r\n                                <div style={lineSpace}>\r\n                                  {api.body.sample &&\r\n                                    api.body.sample\r\n                                      .split('\\n')\r\n                                      .map((sampleLine) => (\r\n                                        <p class=\"small\">{sampleLine}</p>\r\n                                      ))}\r\n                                </div>\r\n                              </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer className=\"text-muted\">\r\n                              <CopyToClipboard\r\n                                text={api.body.sample}\r\n                                onCopy={notify}\r\n                              >\r\n                                <button class=\"btn btn-lg  btn-info  text-uppercase\">\r\n                                  <FileCopyOutlinedIcon />\r\n                                </button>\r\n                              </CopyToClipboard>\r\n                            </Card.Footer>\r\n                          </Card>\r\n                        </Card.Body>\r\n                      </AccordionDetails>\r\n                    </Accordion>\r\n                  </Card>\r\n                )}\r\n                <Card>\r\n                  <Accordion style={{ backgroundColor: apiaccordianColor }}>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMoreIcon />}\r\n                      aria-controls=\"panel1a-content\"\r\n                      id=\"panel1a-header\"\r\n                    >\r\n                      <Typography className={classes.heading}>\r\n                        Response\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <ResponseTable responses={api.responses} />\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </Card>\r\n              </AccordionBootstrap>\r\n            </Typography>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst typography = {\r\n  width: '90%',\r\n  'margin-left': 'auto',\r\n  'margin-right': 'auto',\r\n}\r\n\r\nconst lineSpace = {\r\n  'line-height': '40%',\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\AboutCard.jsx",["589","590","591","592","593","594","595"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\n// import AboutData from '../Documentation/APIsData.js'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    'font-weight': 'bold',\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n}))\r\n\r\nexport default function About() {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ width: '75%', marginLeft: 'auto', marginRight: 'auto' }}\r\n    >\r\n      <Accordion\r\n        expanded={expanded === `panel1`}\r\n        onChange={handleChange(`panel1`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            What is Beat The Receipt?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={typography}>\r\n            We are a third party which Integrates with organizations printing\r\n            paper receipts to help them getting rid of paper receipts and\r\n            replace it with digital receipt.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        expanded={expanded === `panel3`}\r\n        onChange={handleChange(`panel3`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            How do paper receipts affect the Environment?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={typography}>\r\n            According to{' '}\r\n            <a\r\n              href={staticVariables.references.greenAmericaURL}\r\n              target=\"_blank\"\r\n            >\r\n              Green America\r\n            </a>\r\n            , Every year in the US, paper receipt use consumes over 3 million\r\n            trees, 9 billion gallons of water, and generates over 4 billion\r\n            pounds of CO2 and 302 million pounds of solid waste.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel2`}\r\n        onChange={handleChange(`panel2`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            How can I contribute in saving the environment?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={typography}>Description</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel5`}\r\n        onChange={handleChange(`panel5`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Paper receipts and Covid-19\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={typography}>Description</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel4`}\r\n        onChange={handleChange(`panel4`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Why Beat The Receipt?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={typography}>\r\n            <ul>\r\n              <li>Easy to integrate:-</li>\r\n              Now it's easy to integrate beat the receipt with your store system using our documentation and api's\r\n              <li>Environment</li>\r\n              \r\n              <li>Cost</li>\r\n            </ul>\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst typography = {\r\n  width: '90%',\r\n  'margin-left': 'auto',\r\n  'margin-right': 'auto',\r\n}\r\n\r\nconst lineSpace = {\r\n  'line-height': '40%',\r\n}\r\n\r\nconst sideByside = {\r\n  // display:'inline-block',\r\n  float: 'left',\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Home\\RetailerBenefits.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Avatar.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Home.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\ComingSoon.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Integration.jsx",["596"],"import React, { Component } from 'react'\r\nimport APIs from '../Documentation/APIs.jsx'\r\nimport IntegrationSteps from '../Documentation/IntegrationSteps'\r\nimport Credentials from './Credentials'\r\nexport default class Integration extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n         {/* <div class=\"card card-signin my-3\">\r\n      <div class=\"card-body\"> */}\r\n      <Credentials/>\r\n        {/* </div>\r\n      </div> */}\r\n      <div class=\"card card-signin my-5\">\r\n      <div class=\"card-body\">\r\n      <IntegrationSteps loggedin={true}/>\r\n      </div>\r\n    </div>\r\n    <div class=\"card card-signin my-5\">\r\n      <div class=\"card-body\">\r\n        <APIs/>\r\n      </div>\r\n    </div>\r\n    </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n    centered: {\r\n        'width': '80%',\r\n        'margin-left': 'auto',\r\n        'margin-right': 'auto',\r\n      },\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\Credentials.jsx",["597","598"],"import React, { Component } from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nexport default class Credentials extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      \r\n        <div style={Styles.centered}>\r\n            <Card border=\"success\">\r\n            <Card.Body>         \r\n            <h1>Subscription Key</h1>\r\n                        <InputGroup className=\"mb-3\">\r\n              <FormControl\r\n                id=\"subs\"\r\n                class=\"form-control\"\r\n                placeholder=\"subscription\"\r\n                value={localStorage.getItem('key')}\r\n                disabled=\"true\"\r\n                autofocus\r\n              />\r\n              <InputGroup.Append>\r\n                <CopyToClipboard\r\n                  text={localStorage.getItem('key')}\r\n                  onCopy={() => {\r\n                    toast.success('Copied to Clipboard')\r\n                  }}\r\n                >\r\n              <Button variant=\"info\">\r\n                  <FileCopyOutlinedIcon />\r\n                </Button>\r\n                </CopyToClipboard>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n\r\n                  <h1>Subscription token</h1>\r\n            <InputGroup className=\"mb-3\">\r\n            <textarea\r\n              name=\"message\"\r\n              rows=\"3\"\r\n              class=\"form-control\"\r\n              value={localStorage.getItem('token')}\r\n              disabled=\"true\"\r\n              autofocus\r\n            />\r\n            <InputGroup.Append>\r\n            <CopyToClipboard\r\n              text={localStorage.getItem('token')}\r\n              onCopy={() => {\r\n                toast.success('Copied to Clipboard')\r\n              }}\r\n            >\r\n              <button class=\"btn btn-lg btn-info  text-uppercase\">\r\n                <FileCopyOutlinedIcon />\r\n              </button>\r\n            </CopyToClipboard>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n            </Card.Body>\r\n            </Card>\r\n                        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n    centered: {\r\n        'width': '50%',\r\n        'margin-left': 'auto',\r\n        'margin-right': 'auto',\r\n      },\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\QrCodeModal.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\ReceiptsTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\General\\Functions.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteReceipt.jsx",["599"],"import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { toast } from 'react-toastify'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\r\nimport Box from '@material-ui/core/Box'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Barcode from 'react-barcode'\r\n\r\nexport default class DeleteReceipt extends Component {\r\n  state = {\r\n    show: false,\r\n    loading: false,\r\n  }\r\n  async deleteReceipt() {\r\n    this.setState({ loading: true })\r\n    const headers = {\r\n      authtoken: localStorage.getItem('token'),\r\n    }\r\n    await axios\r\n      .delete(\r\n        `${staticVariables.backendURL}/api/receipts/delete/${this.props.receipt._id}`,\r\n        {\r\n          headers: headers,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.success(`Receipt Deleted`)\r\n        this.props.getReceipts.method(\r\n          this.props.getReceipts.rowsPerPage,\r\n          this.props.getReceipts.page\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.error(`OOPS Something went wrong!! Couldn't delete receipt`)\r\n      })\r\n  }\r\n  handleClose = () => this.setState({ show: false })\r\n  handleShow = () => this.setState({ show: true })\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"danger\" onClick={this.handleShow}>\r\n          <DeleteForeverIcon />\r\n        </Button>\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleClose}\r\n          centered\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Body>\r\n            <h4>Are you sure you want to delete this receipt?</h4>\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"collapsible table\">\r\n                <TableHeader />\r\n                <TableBody>\r\n                  <Row row={this.props.receipt} />\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              disabled={this.state.loading}\r\n              onClick={(e) => this.deleteReceipt(this.props.receipt._id)}\r\n            >\r\n              {!this.state.loading ? (\r\n                'Delete'\r\n              ) : (\r\n                <LoadingIcon type=\"spin\" color=\"#ffffff\" />\r\n              )}\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n  centered: {\r\n    width: '60%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n  },\r\n}\r\n\r\nconst titleMenuColor = '#353A40'\r\n\r\nfunction TableHeader() {\r\n  return (\r\n    <TableHead>\r\n      <TableRow style={{ backgroundColor: titleMenuColor }}>\r\n        <TableCell />\r\n        <TableCell style={{ color: 'white' }}>\r\n          <b>Date-Time</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Barcode</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Subtotal</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>VAT</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Total</b>\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n})\r\n\r\nfunction Row(props) {\r\n  const { row } = props\r\n  const [open, setOpen] = React.useState(true)\r\n  const classes = useRowStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.createdAt}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <Barcode width={1} height={20} value={row.barcode} />\r\n        </TableCell>\r\n        <TableCell align=\"center\">{20}</TableCell>\r\n        <TableCell align=\"center\">{row.receipt.vatPercentage}</TableCell>\r\n        <TableCell align=\"center\">{40}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Details\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Item</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                    <TableCell align=\"right\">Quantity</TableCell>\r\n                    <TableCell align=\"right\">Total price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.receipt.items.map((item) => (\r\n                    <TableRow key={item.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {item.name}\r\n                      </TableCell>\r\n                      <TableCell>{item.price}</TableCell>\r\n                      <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {/* {Math.round(20 * 20* 100) / 100}\r\n                         */}\r\n                        {item.price * item.quantity}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\SendReceipt.jsx",["600","601","602","603","604"],"import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { toast } from 'react-toastify'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\r\nimport Box from '@material-ui/core/Box'\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Barcode from 'react-barcode'\r\nimport EmailIcon from '@material-ui/icons/Email'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport { validateEmail, sendReceiptMail } from '../General/Functions'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nexport default class SendReceipt extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      show: false,\r\n    loading: false,\r\n    email: '',\r\n    alert: false,\r\n    }\r\n    this.handleMailChange = this.handleMailChange.bind(this)\r\n  }\r\n  handleMailChange(event) {\r\n    this.setState({ email: event.target.value, alert: false })\r\n  }\r\n  async sendMail() {\r\n    // this.setState({\r\n    //   mailAlert: false,\r\n    // })\r\n    if (!validateEmail(this.state.email)) {\r\n      this.setState({ alert: true })\r\n    } else {\r\n      this.setState({ loading: true })\r\n      await sendReceiptMail(\r\n        localStorage.getItem('token'),\r\n        this.state.email,\r\n        this.props.receipt._id\r\n      )\r\n      this.setState({ show: false, loading: false,email: '' })\r\n    }\r\n  }\r\n\r\n  handleClose = () => this.setState({ show: false })\r\n  handleShow = () => this.setState({ show: true })\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"info\" onClick={this.handleShow}>\r\n          <EmailIcon />\r\n        </Button>\r\n        <Modal\r\n          show={this.state.show}\r\n          onHide={this.handleClose}\r\n          centered\r\n          size=\"lg\"\r\n        >\r\n              <Modal.Body>\r\n                <h4>Send this receipt by mail</h4>\r\n                <TableContainer component={Paper}>\r\n                  <Table aria-label=\"collapsible table\">\r\n                    <TableHeader />\r\n                    <TableBody>\r\n                      <Row row={this.props.receipt} />\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Modal.Body>\r\n              <Modal.Body>\r\n              <div class=\"form-label-group\" style={{paddingBottom:'1ex'}}>\r\n                        <label for=\"inputStoreEmail\">Email</label>\r\n                        <input\r\n                          id=\"inputAddress\"\r\n                          type=\"email\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter recipient Email\"\r\n                          onChange={this.handleMailChange}\r\n                          value={this.state.email}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                      </div>\r\n                <Alert variant=\"danger\" show={this.state.alert}>\r\n                  Invalid Email address!\r\n                </Alert>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"info\"\r\n                  disabled={this.state.loading}\r\n                  onClick={() => this.sendMail(this.props.receipt._id)}\r\n                >\r\n                  {!this.state.loading ? (\r\n                            'Send' \r\n                          ) : (\r\n                            <LoadingIcon  color=\"#ffffff\" />\r\n                          )}\r\n                </Button>\r\n              </Modal.Footer>\r\n          \r\n           \r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n  centered: {\r\n    width: '60%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n  },\r\n}\r\n\r\nconst titleMenuColor = '#353A40'\r\n\r\nfunction TableHeader() {\r\n  return (\r\n    <TableHead>\r\n      <TableRow style={{ backgroundColor: titleMenuColor }}>\r\n        <TableCell />\r\n        <TableCell style={{ color: 'white' }}>\r\n          <b>Date-Time</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Barcode</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Subtotal</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>VAT</b>\r\n        </TableCell>\r\n        <TableCell style={{ color: 'white' }} align=\"center\">\r\n          <b>Total</b>\r\n        </TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n})\r\n\r\nfunction Row(props) {\r\n  const { row } = props\r\n  const [open, setOpen] = React.useState(false)\r\n  const classes = useRowStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.createdAt}\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <Barcode width={1} height={20} value={row.barcode} />\r\n        </TableCell>\r\n        <TableCell align=\"center\">{20}</TableCell>\r\n        <TableCell align=\"center\">{row.receipt.vatPercentage}</TableCell>\r\n        <TableCell align=\"center\">{40}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Details\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Item</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                    <TableCell align=\"right\">Quantity</TableCell>\r\n                    <TableCell align=\"right\">Total price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.receipt.items.map((item) => (\r\n                    <TableRow key={item.name}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {item.name}\r\n                      </TableCell>\r\n                      <TableCell>{item.price}</TableCell>\r\n                      <TableCell align=\"right\">{item.quantity}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {/* {Math.round(20 * 20* 100) / 100}\r\n                         */}\r\n                        {item.price * item.quantity}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteAllReceipts.jsx",["605"],"import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { toast } from 'react-toastify'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\n\r\nexport default class DeleteAllReceipt extends Component {\r\n  state = {\r\n    show: false,\r\n    loading: false,\r\n  }\r\n  async deleteAllReceipt() {\r\n    this.setState({ loading: true })\r\n    const headers = {\r\n      authtoken: localStorage.getItem('token'),\r\n    }\r\n    await axios\r\n      .delete(\r\n        `${staticVariables.backendURL}/api/receipts/deleteReceiptsOfStore/${localStorage.getItem('key')}`,\r\n        {\r\n          headers: headers,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.success(`All Receipts Deleted`)\r\n        this.props.getReceipts.method(\r\n          this.props.getReceipts.rowsPerPage,\r\n          this.props.getReceipts.page\r\n        )\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.error(`OOPS Something went wrong!! Couldn't delete receipts`)\r\n      })\r\n  }\r\n  handleClose = () => this.setState({ show: false })\r\n  handleShow = () => this.setState({ show: true })\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button variant=\"danger\" onClick={this.handleShow}>\r\n          Delete All Receipts{' '}<DeleteForeverIcon />\r\n        </Button>\r\n        <Modal show={this.state.show} onHide={this.handleClose} centered >\r\n          {!this.state.loading ? (\r\n            <>\r\n              <Modal.Body>\r\n                <h4>Are you sure you want to delete All receipts?</h4>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={(e) => this.deleteAllReceipt()}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Modal.Footer>\r\n            </>\r\n          ) : (\r\n            <div style={{ paddingBottom: '5ex', paddingTop: '5ex' }}>\r\n              <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\HomeItems.js",["606"],"import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Title from './Title';\r\nimport ReceiptsTable from './ReceiptsTable'\r\n\r\n\r\n\r\n\r\nexport  function Receipts() {\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Receipts</Title>\r\n      <div style ={{width:'95%',marginLeft:'auto',marginRight:'auto'}}>\r\n      <ReceiptsTable home/>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\StoreDashboard\\DeleteStore.jsx",["607"],"import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Button } from 'react-bootstrap'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { toast } from 'react-toastify'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport {logout} from '../General/Functions'\r\n\r\n\r\nexport default class DeleteStore extends Component {\r\n  state = {\r\n    show: false,\r\n    loading: false,\r\n  }\r\n  async deleteStore() {\r\n    this.setState({ loading: true })\r\n    const headers = {\r\n      authtoken: localStorage.getItem('token'),\r\n    }\r\n    await axios\r\n      .delete(\r\n        `${staticVariables.backendURL}/api/storesInfo/delete/${localStorage.getItem('key')}`,\r\n        {\r\n          headers: headers,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.success(`Account Deleted`)\r\n        logout()\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ show: false, loading: false })\r\n        toast.error(`OOPS Something went wrong!! Try again later`)\r\n      })\r\n  }\r\n  handleClose = () => this.setState({ show: false })\r\n  handleShow = () => this.setState({ show: true })\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Button  variant=\"danger\" block onClick={this.handleShow}>\r\n        {this.props.open ? 'unsubscribe' : <DeleteForeverIcon />}\r\n      </Button>\r\n        <Modal show={this.state.show} onHide={this.handleClose} centered >\r\n          {!this.state.loading ? (\r\n            <>\r\n              <Modal.Body>\r\n                <h4>All Receipts and account info will be deleted.\r\n                  <br/>\r\n                  Are you sure you want to unsubscribe?\r\n                </h4>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={(e) => this.deleteStore()}\r\n                >\r\n                  Unsubscribe\r\n                </Button>\r\n              </Modal.Footer>\r\n            </>\r\n          ) : (\r\n            <div style={{ paddingBottom: '5ex', paddingTop: '5ex' }}>\r\n              <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\TestReceiptQr.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\AtosBTR\\src\\components\\Trial\\CreateReceipt.jsx",["608","609","610","611"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\index.js",[],["612","613"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\App.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\reportWebVitals.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Error\\Error.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\Documentation.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\Trial.jsx",["614"],"import React, { Component } from 'react'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport TestReceiptQr from './TestReceiptQr'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport { isLoggedIn, getWindowSize } from '../General/Functions'\r\nimport CreateTestReceipt from './CreateReceipt'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst screenSize = getWindowSize()\r\n\r\nexport default class Trial extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loggedIn: false,\r\n      createReceipt:false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loggedIn: isLoggedIn() })\r\n  }\r\n\r\n  switchChanged() {\r\n    this.setState({ createReceipt: !this.state.createReceipt })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={Styles.bgImage}>\r\n        <div style={Styles.minHeight}>\r\n          <Navbar />\r\n          <div style={{width:'20%',marginRight:'auto',marginLeft:'auto',paddingTop:'20px'}}>\r\n          <Card border=\"success\">\r\n            <div style={{padding:'15px'}}>\r\n          <FormControlLabel\r\n            control={<Switch onClick={()=>this.switchChanged()} color=\"primary\" />}\r\n            label=\"Create your test receipt\"\r\n            labelPlacement=\"Create your test receipt\"\r\n          />\r\n          </div>\r\n          </Card>\r\n          </div>\r\n          {!this.state.createReceipt?<TestReceiptQr loggedIn={this.state.loggedIn} />:\r\n          <CreateTestReceipt test/>}\r\n          <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n  bgImage: {\r\n    backgroundImage: `url(/beatthereceipt.png)`,\r\n    'background-repeat': 'no-repeat',\r\n    'background-attachment': 'fixed',\r\n    'background-size': 'cover',\r\n    'min-height': `${screenSize.height}px`,\r\n  },\r\n  minHeight: {\r\n    'min-height': `${screenSize.height}px`,\r\n  },\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\Home.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\SignIn\\SignIn.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\Receipt.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Dashboard.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\CreateStore\\createStore.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\APIs.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\ReceiptsCalculator.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\GetStartedCard.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\Carousel.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\RetailerBenefits.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\AboutCard.jsx",["615"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport { Styles } from '../General/StaticVariables/Styles.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    'font-weight': 'bold',\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  },\r\n}))\r\n\r\nexport default function About() {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ width: '75%', marginLeft: 'auto', marginRight: 'auto' }}\r\n    >\r\n      <Accordion\r\n        expanded={expanded === `panel1`}\r\n        onChange={handleChange(`panel1`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            What is Beat The Receipt?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={Styles.center90}>\r\n            We are a third party which Integrates with organizations printing\r\n            paper receipts to help them getting rid of paper receipts and\r\n            replace it with digital receipt.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        expanded={expanded === `panel3`}\r\n        onChange={handleChange(`panel3`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            How do paper receipts affect the Environment?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={Styles.center90}>\r\n            According to{' '}\r\n            <a\r\n              href={staticVariables.references.greenAmericaURL}\r\n              target=\"_blank\"\r\n            >\r\n              Green America\r\n            </a>\r\n            , Every year in the US, paper receipt use consumes over 3 million\r\n            trees, 9 billion gallons of water, and generates over 4 billion\r\n            pounds of CO2 and 302 million pounds of solid waste.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel2`}\r\n        onChange={handleChange(`panel2`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            How can I contribute in saving the environment?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={Styles.center90}>\r\n            If you are a store owner stop printing paper receipts and subscribe\r\n            now for digital receipts. Otherwise if you are a store customer just\r\n            say no for paper receipts and ask for digital receipts.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel5`}\r\n        onChange={handleChange(`panel5`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Paper receipts and Covid-19\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={Styles.center90}>\r\n            Covid-19 virus can live on surfaces for a period of time. So you can\r\n            limit contact as much as possible by replacing paper receipts with\r\n            digital receipts.\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion\r\n        expanded={expanded === `panel4`}\r\n        onChange={handleChange(`panel4`)}\r\n      >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1bh-content\"\r\n          id=\"panel1bh-header\"\r\n        >\r\n          <Typography className={classes.heading}>\r\n            Why Beat The Receipt?\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography style={Styles.center90}>\r\n            <ul>\r\n              <li>Easy to integrate</li>\r\n              Now it's easy to integrate beat the receipt with your store system\r\n              using our documentation and api's.\r\n              <li>Environment</li>\r\n              To help having better environment by reducing printing papers.\r\n              <li>Cost</li>\r\n              Reduce your store overhead cost for paper receipts by digitalizing\r\n              receipts.\r\n            </ul>\r\n          </Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\ViewTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Receipt\\TotalTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Loading.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\CreateStore\\SubscModal.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Functions.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Home.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\listItems.js",["616"],"import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport PeopleIcon from '@material-ui/icons/People'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport LayersIcon from '@material-ui/icons/Layers'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport HomeIcon from '@material-ui/icons/Home';\nimport EditIcon from '@material-ui/icons/Edit'\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport ReactTooltip from 'react-tooltip'\nimport DeleteStore from './DeleteStore.jsx'\n\nconst ActiveItemColor = '#353A40'\nconst DefaultItemColor = 'white'\n\n\n\nexport function MainListItems(props) {\n  const sendDataToParentComponent = (data) => {\n    props.parentCallback(data)\n  }\n  const list = [\n    {\n      name: 'Home',\n      icon:(style,toolTipID)=> {\n        return(\n        <HomeIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'home',\n    },\n    {\n      name: 'Receipts',\n      icon:(style,toolTipID)=> {\n        return(\n        <ReceiptIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'receipts',\n    },\n    {\n      name: 'Analytics',\n      icon:(style,toolTipID)=> {\n        return(\n        <BarChartIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'analytics',\n    },\n    {\n      name: 'Customize Receipt',\n      icon:(style,toolTipID)=> {\n        return(\n        <EditIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'customize',\n    },\n    {\n      name: 'Create Receipt',\n      icon:(style,toolTipID)=> {\n        return(\n        <NoteAddIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'create Receipt',\n    },\n    {\n      name: 'Integration',\n      icon:(style,toolTipID)=> {\n        return(\n        <LayersIcon\n          data-tip\n          data-for={toolTipID}\n          style={style}\n        />)\n        },\n      toolTipID: 'integration',\n    },\n    // {\n    //   name: 'Account',\n    //   icon:(style,toolTipID)=> {\n    //     return(\n    //     <PeopleIcon\n    //       data-tip\n    //       data-for={toolTipID}\n    //       style={style}\n    //     />)\n    //     },\n    //   toolTipID: 'account',\n    // },\n  ]\n  const [activeItem, setActiveItem] = React.useState(list[0].name)\n  return (\n    <div>\n      {list.map((item) => (\n        <ListItem\n          button\n          onClick={() => {\n            setActiveItem(item.name)\n            sendDataToParentComponent(item.name)\n          }}\n          style={activeItem === item.name\n            ? { backgroundColor: ActiveItemColor,color: DefaultItemColor }\n            : {}}\n        >\n          <ListItemIcon>\n         \n            {item.icon( activeItem === item.name\n              ? { color: DefaultItemColor }\n              : {},item.toolTipID)}\n            {!props.open && (\n              <ReactTooltip id={item.toolTipID} type=\"dark\">\n                <span>{item.name}</span>\n              </ReactTooltip>\n            )}\n          </ListItemIcon>\n          <ListItemText primary={item.name} />\n        </ListItem>\n      ))}\n    </div>\n  )\n}\n\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Saved reports</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Current month\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Last quarter\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Year-end sale\" />\n    </ListItem>\n  </div>\n)\n\nexport function thirdListItems(open) {\n  return (\n    <div style={{ width: '90%', marginLeft: 'auto', marginRight: 'auto' }}>\n      {/* <ListSubheader inset>Saved reports</ListSubheader> */}\n      {/* <Button variant=\"danger\" block onClick={(e) => alert('Coming Soon')}>\n        {open ? 'Delete Account' : <DeleteForeverIcon />}\n      </Button> */}\n      <DeleteStore open={open}/>\n    </div>\n  )\n}\n\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Home\\FootPrints.jsx",["617","618","619"],"import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport { ApproximateToNthDigit } from '../General/Functions'\r\n\r\nconst receiptCost = 0.015\r\nexport default class CalculatorCardDeck extends Component {\r\n  calculateAnnualReceiptCost(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(numberOfReceiptsPerDay * receiptCost * 365, 1)\r\n  }\r\n\r\n  calculateAnnualCo2(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(\r\n      this.calculateAnnualTrees(numberOfReceiptsPerDay) * 22,\r\n      1\r\n    )\r\n  }\r\n\r\n  calculateAnnualTrees(numberOfReceiptsPerDay) {\r\n    return ApproximateToNthDigit(numberOfReceiptsPerDay * 0.0001 * 365, 1)\r\n  }\r\n\r\n  numberWithCommas(number) {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: '90%', 'margin-left': 'auto', 'margin-right': 'auto' }}\r\n      >\r\n        <CardDeck>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title\r\n                style={{\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualCo2(this.props.receiptsPerDay)\r\n                )}\r\n                Kg\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/CO2Footprint.png\" />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                As 1 tree can take up about 22Kg of Co2 over 1 year, according\r\n                to{' '}\r\n                <a\r\n                  href={staticVariables.references.co2PerReceipt}\r\n                  target=\"_blank\"\r\n                >\r\n                  European Environment Agency\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title\r\n                style={{\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualTrees(this.props.receiptsPerDay)\r\n                )}{' '}\r\n                Tree\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/cuttedTrees.png\" />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                Estimated number of trees you could save, according to{' '}\r\n                <a\r\n                  href={staticVariables.references.treesPerReceipt}\r\n                  target=\"_blank\"\r\n                >\r\n                  Ribble-pack\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title\r\n                style={{\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                {this.numberWithCommas(\r\n                  this.calculateAnnualReceiptCost(this.props.receiptsPerDay)\r\n                )}\r\n                $\r\n              </Card.Title>\r\n              <Card.Img variant=\"top\" src=\"/moneyBag.png\" />\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                As average cost of 1 paper receipt is $0.015 (1.5 cents),\r\n                according to{' '}\r\n                <a\r\n                  href={staticVariables.references.receiptCost}\r\n                  target=\"_blank\"\r\n                >\r\n                  FMI\r\n                </a>\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardDeck>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Avatar.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\TestReceiptQr.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\NavBar.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Footer.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\IntegrationSteps.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\ComingSoon.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Trial\\CreateReceipt.jsx",["620","621","622","623"],"import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport { toast } from 'react-toastify'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport {\r\n  createReceipt,\r\n  validateEmail,\r\n  sendReceiptMail,\r\n} from '../General/Functions'\r\nimport { Button } from 'react-bootstrap'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Switch from '@material-ui/core/Switch'\r\nconst tableHeaderColor ='#353A40'\r\nfunction defaultItem(itemIndex) {\r\n  return { name: `Item${itemIndex + 1}`, price: 1.0, quantity: 1 }\r\n}\r\nexport default class CreateReceipt extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      items: [defaultItem(0)],\r\n      vat: 0,\r\n      loading: false,\r\n      receiptAlert: false,\r\n      createdReceiptQR: undefined,\r\n      createdReceiptID: undefined,\r\n      showQrCode: false,\r\n      mail: '',\r\n      mailAlert: false,\r\n      mailLoading: false,\r\n      barcode: '',\r\n      barcodeOn: false,\r\n    }\r\n  }\r\n\r\n  getCredentials() {\r\n    if (this.props.test) {\r\n      return {\r\n        storeId: staticVariables.testStore.testStoreKey,\r\n        token: staticVariables.testStore.testStoreToken,\r\n      }\r\n    } else {\r\n      return {\r\n        storeId: localStorage.getItem('key'),\r\n        token: localStorage.getItem('token'),\r\n      }\r\n    }\r\n  }\r\n\r\n  AddItem() {\r\n    this.setState({\r\n      items: [...this.state.items, defaultItem(this.state.items.length)],\r\n      showQrCode: false,\r\n    })\r\n  }\r\n\r\n  handleMailChange(event) {\r\n    this.setState({ mail: event.target.value, mailAlert: false })\r\n  }\r\n  handleBarcodeChange(event) {\r\n    this.setState({ barcode: event.target.value ,showQrCode: false })\r\n  }\r\n  handleNameChange(event, index) {\r\n    this.state.items[index].name = event.target.value\r\n    this.setState({ items: this.state.items, showQrCode: false })\r\n  }\r\n\r\n  handlePriceChange(event, index) {\r\n    this.state.items[index].price = event.target.value\r\n    this.setState({ items: this.state.items, showQrCode: false })\r\n  }\r\n  handleQuantityChange(event, index) {\r\n    this.state.items[index].quantity = event.target.value\r\n    this.setState({ items: this.state.items, showQrCode: false })\r\n  }\r\n  DeleteItem(index) {\r\n    if (this.state.items.length > 1) {\r\n      this.state.items.splice(index, 1)\r\n      this.setState({ items: this.state.items, showQrCode: false })\r\n    } else {\r\n      toast.error('Receipt Should have at least 1 item')\r\n    }\r\n  }\r\n\r\n  handleVatChange(event) {\r\n    let vat = event.target.value\r\n    if (vat >= 0 && vat <= 100) this.setState({ vat: vat, showQrCode: false })\r\n  }\r\n\r\n  handleBarcodeSwitch() {\r\n    this.setState({ barcodeOn: !this.state.barcodeOn,showQrCode: false  })\r\n  }\r\n  async createTestReceipt() {\r\n    this.setState({\r\n      loading: true,\r\n      showQrCode: true,\r\n      createdReceiptQR: undefined,\r\n      createdReceiptID: undefined,\r\n    })\r\n    let credentials = this.getCredentials()\r\n    let response = await createReceipt(credentials.storeId, credentials.token, {\r\n      items: this.state.items,\r\n      vat: this.state.vat,\r\n      barcode: this.state.barcodeOn ? this.state.barcode : undefined,\r\n    })\r\n    response\r\n      ? this.setState({\r\n          createdReceiptQR: response.qrCode,\r\n          createdReceiptID: response.id,\r\n          loading: false,\r\n        })\r\n      : this.setState({\r\n          loading: false,\r\n          showQrCode: false,\r\n          receiptAlert: true,\r\n        })\r\n  }\r\n  async sendMail(e) {\r\n    this.setState({\r\n      mailAlert: false,\r\n    })\r\n    if (!validateEmail(this.state.mail)) {\r\n      this.setState({ mailAlert: true })\r\n    } else {\r\n      this.setState({ mailLoading: true })\r\n      let credentials = this.getCredentials()\r\n      await sendReceiptMail(\r\n        credentials.token,\r\n        this.state.mail,\r\n        this.state.createdReceiptID\r\n      )\r\n      this.setState({ mailLoading: false })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={Styles.centered}>\r\n        <div class=\"card  my-5\">\r\n          <div class=\"card-body\">\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr style={{backgroundColor:tableHeaderColor, color:'white'}}>\r\n                  <th style={{ width: '5%' }}>#</th>\r\n                  <th style={{ width: '35%' }}>Item Name</th>\r\n                  <th style={{ width: '18%' }}>Price</th>\r\n                  <th style={{ width: '12%' }}>Quantity</th>\r\n                  <th style={{ width: '20%' }}>Total Price</th>\r\n                  <th style={{ width: '10%' }} />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.items.map((item, index) => (\r\n                  <tr>\r\n                    <td>{index + 1}</td>\r\n                    <td>\r\n                      <input\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Item name\"\r\n                        onChange={(e) => this.handleNameChange(e, index)}\r\n                        value={item.name}\r\n                        required\r\n                        autofocus\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter Price\"\r\n                        step=\"0.01\"\r\n                        defaultValue=\"1.00\"\r\n                        onChange={(e) => this.handlePriceChange(e, index)}\r\n                        value={item.price}\r\n                        min=\"0.01\"\r\n                        required\r\n                        autofocus\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter quantity\"\r\n                        defaultValue=\"1\"\r\n                        onChange={(e) => this.handleQuantityChange(e, index)}\r\n                        value={item.quantity}\r\n                        min=\"1\"\r\n                        required\r\n                        autofocus\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <h5>{item.price * item.quantity}</h5>\r\n                    </td>\r\n                    <td>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => this.DeleteItem(index)}\r\n                      >\r\n                        <DeleteForeverIcon />\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr >\r\n                  <td style={{backgroundColor:tableHeaderColor, color:'white'}} colSpan=\"2\">\r\n                    <b>VAT</b>\r\n                  </td>\r\n                  <td style={{backgroundColor:tableHeaderColor, display: 'flex',color:'white' }}>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Enter VAT\"\r\n                      step=\"0.01\"\r\n                      defaultValue=\"1.00\"\r\n                      onChange={(e) => this.handleVatChange(e)}\r\n                      value={this.state.vat}\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      style={{ width: '60%' }}\r\n                      required\r\n                      autofocus\r\n                    />\r\n                    <h2>%</h2>\r\n                  </td>\r\n\r\n                  <td colSpan=\"2\">\r\n                    <button\r\n                      class=\"btn btn-lg btn-info  text-uppercase\"\r\n                      type=\"submit\"\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        e.stopPropagation()\r\n                      }}\r\n                      onClick={(e) => this.AddItem(e)}\r\n                    >\r\n                      Add Item\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{backgroundColor:tableHeaderColor, color:'white'}}>\r\n                  <td colSpan=\"2\">\r\n                    <b>BarCode</b>\r\n                    <Switch\r\n                      onClick={() => this.handleBarcodeSwitch()}\r\n                      color=\"primary\"\r\n                    />\r\n                    <div style={{ padding: '15px' }}></div>\r\n                  </td>\r\n                  {this.state.barcodeOn && (\r\n                    <td colSpan=\"2\">\r\n                      <input\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                        placeholder=\"Enter receipt barcode\"\r\n                        onChange={(e) => this.handleBarcodeChange(e)}\r\n                        value={this.state.barcode}\r\n                        // style={{ width: '60%' }}\r\n                        required\r\n                        autofocus\r\n                      />\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n\r\n            <div style={{ paddingTop: '10px' }}>\r\n              <Alert variant=\"danger\" show={this.state.receiptAlert}>\r\n                Check that you entered all data correctly!\r\n                <br />\r\n                Item Name couldn't be empty\r\n                <br />\r\n                Item Price couldn't be smaller than or equal 0<br />\r\n                Item Quantity couldn't be smaller than or equal 0<br />\r\n                VAT couldn't be smaller than zero\r\n              </Alert>\r\n              <button\r\n                class=\"btn btn-lg btn-info btn-block text-uppercase\"\r\n                type=\"submit\"\r\n                disabled={this.state.loading}\r\n                onSubmit={(e) => {\r\n                  e.preventDefault()\r\n                  e.stopPropagation()\r\n                }}\r\n                onClick={() => this.createTestReceipt()}\r\n              >\r\n                Create Receipt\r\n              </button>\r\n              {this.state.showQrCode && (\r\n                <div style={Styles.createReceiptCard}>\r\n                  <CardDeck>\r\n                    <Card border=\"success\">\r\n                      <Card.Header>\r\n                        <div style={Styles.cardCentered}>\r\n                          <h4>Scan to get Receipt</h4>\r\n                        </div>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        {this.state.loading ? (\r\n                          <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n                        ) : (\r\n                          <img\r\n                            src={this.state.createdReceiptQR}\r\n                            alt=\"Receipt Qr Code\"\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            style={Styles.cardCentered}\r\n                          />\r\n                        )}\r\n                      </Card.Body>\r\n                      <Card.Footer>\r\n                        {this.state.createdReceiptID && (\r\n                          <a\r\n                            href={`/receipt/${this.state.createdReceiptID}`}\r\n                            target=\"_blank\"\r\n                          >\r\n                            Open Receipt\r\n                          </a>\r\n                        )}\r\n                      </Card.Footer>\r\n                    </Card>\r\n                    <Card border=\"success\">\r\n                      <Card.Header>\r\n                        <div style={Styles.cardCentered}>\r\n                          <h4>Or Send test receipt to your mail</h4>\r\n                        </div>\r\n                      </Card.Header>\r\n                      <Card.Body>\r\n                        {this.state.loading ? (\r\n                          <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\r\n                        ) : (\r\n                          <>\r\n                            <div class=\"form-label-group\">\r\n                              <input\r\n                                id=\"inputEmail\"\r\n                                type=\"email\"\r\n                                class=\"form-control\"\r\n                                placeholder=\"Enter Email\"\r\n                                onChange={(e) => this.handleMailChange(e)}\r\n                                value={this.state.mail}\r\n                                required\r\n                                autofocus\r\n                              />\r\n                              <br />\r\n                              <Alert\r\n                                variant=\"danger\"\r\n                                show={this.state.mailAlert}\r\n                              >\r\n                                Invalid Email address!\r\n                              </Alert>\r\n                            </div>\r\n                            <button\r\n                              class=\"btn btn-lg btn-info btn-block text-uppercase\"\r\n                              type=\"submit\"\r\n                              disabled={this.state.mailLoading}\r\n                              onSubmit={(e) => {\r\n                                e.preventDefault()\r\n                                e.stopPropagation()\r\n                              }}\r\n                              onClick={(e) => this.sendMail(e)}\r\n                            >\r\n                              {!this.state.mailLoading ? (\r\n                                'Send Mail'\r\n                              ) : (\r\n                                <LoadingIcon color=\"#ffffff\" />\r\n                              )}\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </CardDeck>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Styles = {\r\n  centered: {\r\n    width: '60%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n  },\r\n  cardCentered: {\r\n    width: '100%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n  },\r\n  createReceiptCard: {\r\n    width: '60%',\r\n    'margin-left': 'auto',\r\n    'margin-right': 'auto',\r\n    paddingTop: '10px',\r\n  },\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Integration.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\ReceiptsTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteStore.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteAllReceipts.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\HomeItems.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Credentials.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Title.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\SendReceipt.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\DeleteReceipt.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Slider.jsx",["624"],"import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport {Styles} from '../General/StaticVariables/Styles.js'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}))\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n    // width:'200%',\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider)\r\n\r\nexport default function CustomizedSlider(props) {\r\n  const classes = useStyles()\r\n  const sendDataToParentComponent = (data) => {\r\n    props.parentCallback(data)\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography gutterBottom>{props.title}</Typography>\r\n      <br/>\r\n      <div style={Styles.slider}>\r\n      <PrettoSlider\r\n        valueLabelDisplay=\"on\"\r\n        aria-label=\"pretto slider\"\r\n        defaultValue={props.defaultValue}\r\n        step={props.step}\r\n        max={props.max}\r\n        min = {props.min}\r\n        onChange={(e, value) => sendDataToParentComponent(value)}\r\n      />\r\n      </div>\r\n      <br/>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\APIsData.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\QrCodeModal.js",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\ResponseTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\BodyTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\Documentation\\HeadersTable.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Income.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\ContactUs\\ContactUs.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\StaticVariables\\Styles.js",["625"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\Analytics.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\NoOfReceiptsChart.js",["626","627"],"import React from 'react'\nimport { useTheme } from '@material-ui/core/styles'\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts'\nimport Title from './Title'\nimport TextField from '@material-ui/core/TextField'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Styles } from '../General/StaticVariables/Styles.js'\nimport IconButton from '@material-ui/core/IconButton'\nimport TodayIcon from '@material-ui/icons/Today'\nimport ReactTooltip from 'react-tooltip'\nimport axios from 'axios'\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\nimport { getCurrentDate } from '../General/Functions'\nimport LoadingIcon from '../General/Loading.js'\nimport Alert from 'react-bootstrap/Alert'\nconst currentday=getCurrentDate()\nexport default function Chart() {\n  const theme = useTheme()\n  const [openEdit, setOpenEdit] = React.useState(null)\n  const [loading, setLoading] = React.useState(false)\n  const [day, setDay] = React.useState(currentday)\n  const [data, setData] = React.useState(null)\n  const [error, setError] = React.useState(false)\n\n  function handleClick(event) {\n    setOpenEdit(event.currentTarget)\n  }\n\n  function handleClose() {\n    setOpenEdit(null)\n  }\n  function handleDayChange(event) {\n    setDay(event.target.value)\n    getNumberReceipts(event.target.value)\n  }\n  React.useEffect(() => {\n    getNumberReceipts(day)\n  },[])\n  async function getNumberReceipts(date) {\n    setLoading(true)\n    const headers = {\n      authtoken: localStorage.getItem('token'),\n      storeId: localStorage.getItem('key'),\n    }\n    await axios\n      .get(\n        `${staticVariables.backendURL}/api/storesInfo/totalReceiptsPerDay/${date}T00:00:00`,\n        {\n          headers: headers,\n        }\n      )\n      .then((response) => {\n        setData(response.data.result)\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n        setError(true)\n      })\n  }\n  function Edit() {\n    return (\n      <div>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => (window.location.href = '/store/dashboard')}\n          disabled={loading}\n          aria-controls=\"simple-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => handleClick(e)}\n          style={Styles.right}\n        >\n          <TodayIcon\n            // style={{ color: 'white' }}\n            data-tip\n            data-for=\"edit\"\n          />\n          <ReactTooltip id=\"edit\" type=\"dark\">\n            <span>Edit date</span>\n          </ReactTooltip>\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={openEdit}\n          keepMounted\n          open={Boolean(openEdit)}\n          onClose={() => handleClose()}\n          // style={{float:'right'}}\n        >\n          <MenuItem>\n            <form noValidate>\n              <TextField\n                id=\"date\"\n                label=\"Select Date\"\n                type=\"date\"\n                onChange={(e) => handleDayChange(e)}\n                value={day}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </form>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              handleClose()\n            }}\n          >\n            Done\n          </MenuItem>\n        </Menu>\n      </div>\n    )\n  }\n  return (\n    <React.Fragment>\n      <div style={Styles.sideByside}>\n        <div style={Styles.sideByside}>\n          <Title>{currentday === day?\"Today\":day}</Title>\n        </div>\n        {Edit()}\n      </div>\n      <ResponsiveContainer>\n        {loading ? (\n          <LoadingIcon type=\"spin\" color=\"#5bc0de\" />\n        ) :error?<Alert variant=\"danger\">\n        Error\n      </Alert>: (\n          <LineChart\n            data={data}\n            margin={{\n              top: 16,\n              right: 16,\n              bottom: 0,\n              left: 24,\n            }}\n          >\n            <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n            <YAxis stroke={theme.palette.text.secondary}>\n              <Label\n                angle={270}\n                position=\"left\"\n                style={{\n                  textAnchor: 'middle',\n                  fill: theme.palette.text.primary,\n                }}\n              >\n                Receipts\n              </Label>\n            </YAxis>\n            <Line\n              type=\"monotone\"\n              dataKey=\"amount\"\n              stroke={theme.palette.primary.main}\n              dot={false}\n            />\n          </LineChart>\n        )}\n      </ResponsiveContainer>\n    </React.Fragment>\n  )\n}\n",["628","629"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\NoReceiptsBarChart.jsx",["630","631","632"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\TotalSavings.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\BestSellingChart.jsx",["633","634"],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\General\\Video.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\CustomizeReceipt.jsx",[],"D:\\Hackathon\\Beat The Receipt\\Code\\forked\\Main\\AtosBTR\\client\\src\\components\\StoreDashboard\\PeakHoursBarChart.jsx",["635","636","637"],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\index.js",[],["638","639"],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\reportWebVitals.js",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\App.js",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Home.jsx",["640"],"import React, { Component } from 'react'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport Carousel from './Carousel.jsx'\r\nimport Items from './Items.jsx'\r\nimport {Styles} from '../General/StaticVariables/Styles.js'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div style={Styles.minHeight}>\r\n        <Navbar />\r\n        <Carousel />\r\n        \r\n        <br />\r\n        <div style={Styles.centered75}>\r\n          <hr />\r\n          <Items />\r\n          <hr/>\r\n        </div>\r\n        <br />\r\n  \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Error\\Error.jsx",["641","642"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/ErrorOutline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport { Styles } from '../General/StaticVariables/Styles.js'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(/background.jpg)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: '100% 100%',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Error(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n            <div  style={Styles.minHeight}>\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            ERROR\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h1\">\r\n            {props.errorCode}\r\n          </Typography>\r\n\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n          {props.errorMessage}\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n    </div>\r\n  );\r\n}","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\SignIn\\SignIn.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Carousel.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Loading.js",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Functions.js",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\Footer.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\NavBar.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\signUp\\signUp.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\signUp\\SubscModal.js",["643"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport staticVariables from '../General/Config/StaticVariables.json'\r\n\r\nconst KeyModal = (props) => {\r\n  // const [show, setShow] = useState(props.show);\r\n  var show = props.show\r\n  const handleClose = () => \r\n    (sendDataToParentComponent(false))\r\n  const sendDataToParentComponent = (data) => {\r\n    props.parentCallback(data)\r\n  }\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        // onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          <Modal.Title>Welcome {props.username}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <img src={staticVariables.imgSrc.celebration} alt=\"Welcome\" width=\"500\" height=\"300\"/>\r\n          Hope you enjoy shopping with us\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  \r\n}\r\n\r\nexport default KeyModal\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Home\\Items.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\General\\StaticVariables\\Styles.js",["644"],"import { getWindowSize } from '../Functions'\r\nconst screenSize = getWindowSize()\r\n\r\nexport const Styles = {\r\n  footer: {\r\n    flexShrink: 'none',\r\n  },\r\n  loading: {\r\n    margin: 'auto',\r\n    width: '10%',\r\n  },\r\n  slider: {\r\n    position: 'absolute',\r\n    width: '90%',\r\n    height: '2px',\r\n  },\r\n  centered75: {\r\n    width: '75%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  center90: {\r\n    width: '90%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  card1: {\r\n    width: '75%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    backgroundColor: '#F8F9F9',\r\n  },\r\n  centered75: {\r\n    width: '75%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  centered50: {\r\n    width: '50%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  centered60: {\r\n    width: '60%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n  minHeight: {\r\n    minHeight: `${screenSize.height}px`,\r\n  },\r\n  bgImage: {\r\n    backgroundImage: `url(/background.jpg)`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundAttachment: 'fixed',\r\n    backgroundSize: 'cover',\r\n    minHeight: `${screenSize.height}px`,\r\n  },\r\n  card2: {\r\n    backgroundColor: '#479521',\r\n    color: 'white',\r\n  },\r\n  card3:(bg)=> {\r\n    return({\r\n    backgroundColor: bg,\r\n    color: 'white'})\r\n  },\r\n  sideByside: {\r\n    // display:'inline-block',\r\n    float: 'left',\r\n  },\r\n  lineSpace: {\r\n    lineHeight: '40%',\r\n  },\r\n  description: {\r\n    color: 'silver',\r\n    fontFamily: 'courier',\r\n  },\r\n  right: {\r\n    float: 'right',\r\n    padding: '1px',\r\n  },\r\n  secondaryText:{\r\n    color: 'gray', \r\n    // fontSize: '16px',\r\n    paddingBottom:'0px'\r\n  },\r\n  analyticsCard : {\r\n    padding: '15px',\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    height: 240,\r\n  },\r\n  analyticsEditIcon:{\r\n    color:'black'\r\n  }\r\n}\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\ShoppingCart\\Cartt.jsx",["645"],"import React, { Component } from 'react'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport Items from './CartItems.jsx'\r\nimport {Styles} from '../General/StaticVariables/Styles.js'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nexport default class Cartt extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div style={Styles.minHeight}>\r\n        <Navbar />\r\n        \r\n        <br />\r\n        <div style={Styles.centered75}>\r\n        <h1 style={Styles.centered50}>Your Shopping Bag</h1>\r\n          <hr />\r\n          <Items />\r\n          <hr/>\r\n        </div>\r\n        <br />\r\n  \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\ShoppingCart\\CartItems.jsx",[],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\Order.jsx",["646"],"import React, { Component } from 'react'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport Items from './OrderInfo.jsx'\r\nimport {Styles} from '../General/StaticVariables/Styles.js'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n      <div style={Styles.minHeight}>\r\n        <Navbar />\r\n        \r\n        <br />\r\n        <div style={Styles.centered75}>\r\n          <hr />\r\n          <Items />\r\n          <hr/>\r\n        </div>\r\n        <br />\r\n  \r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Pay\\Pay.jsx",["647","648","649","650","651","652"],"import React, { Component } from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport KeyModal from './SubscModal.js'\r\nimport axios from 'axios'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {isLoggedIn,loginLocalStorage } from '../General/Functions'\r\nimport 'react-bootstrap-timezone-picker/dist/react-bootstrap-timezone-picker.min.css'\r\nimport { Styles } from '../General/StaticVariables/Styles.js'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport backendUrls from '../General/StaticVariables/backEndUrls.json'\r\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\r\nimport Error from '../Error/Error.jsx'\r\nimport uri from '../General/StaticVariables/uri.json'\r\n\r\nvar expMonth = undefined\r\nvar expYear = undefined\r\nexport default class createStore extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cardNumber: '',\r\n      cvc:'',\r\n      cvcAlert:'',\r\n      modalShow: false,\r\n      cardNumberAlert: false,\r\n      loading: false,\r\n      payLoading:false,\r\n      expiryDate:'',\r\n      totalPrice:undefined,\r\n      expiryDateAlert:false,\r\n      resMsg:undefined\r\n    }\r\n\r\n    this.handleCardNumberChange = this.handleCardNumberChange.bind(this)\r\n    this.handleCvcChange = this.handleCvcChange.bind(this)\r\n    this.handleExpiryDateChange = this.handleExpiryDateChange.bind(this)\r\n  }\r\n  \r\n  handleCardNumberChange(event) {\r\n    this.setState({ cardNumber: event.target.value, cardNumberAlert: false })\r\n  }\r\n  handleCvcChange(event) {\r\n    this.setState({ cvc: event.target.value, cvcAlert: false })\r\n  }\r\n  handleExpiryDateChange(event) {\r\n    var date = event.target.value\r\n    if(date.length > 5)\r\n      return\r\n    if(date.length==2 && this.state.expiryDate.length==1)\r\n      date = date +'/'\r\n    if(date.length==3 && this.state.expiryDate.length==2){\r\n      date = [date.slice(0, 2), '/', date.slice(2)].join('');\r\n    }\r\n\r\n    this.setState({ expiryDate:date, expiryDateAlert: false })\r\n  }\r\n\r\n\r\n\r\n  validateExpiryDate() {\r\n    if (this.state.expiryDate.length !== 5) \r\n      return false\r\n    \r\n    const date = this.state.expiryDate.split('/')\r\n    expMonth = date[0]\r\n    expYear = date[1]\r\n    let expMonthInt =parseInt(expMonth)\r\n    let expYearInt = parseInt(expYear)\r\n    if(isNaN(expMonthInt) || isNaN(expYearInt) || expMonthInt>12)\r\n      return false\r\n    return true\r\n  }\r\n\r\n  async getData(){\r\n    this.setState({ loading: true })\r\n    const headers = {\r\n      Authorization: localStorage.getItem('token'),\r\n    }\r\n    \r\n    await axios\r\n      .get(\r\n        backendUrls.host + backendUrls.order.baseUri + backendUrls.order.api.getOrderById.replace(':id', window.location.href.split('/')[4]),{\r\n          headers: headers,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        \r\n          this.setState({\r\n            totalPrice: response.data.data.totalPrice,\r\n            loading: false\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        if(error.response && error.response.data && error.response.data.error)\r\n          toast.error(error.response.data.error)\r\n         else\r\n          toast.error(staticVariables.messages.somethingWrong)\r\n        this.setState({ loading: false, error: true })\r\n      })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  itemPrice(priceInCents){\r\n    var priceInDollars = priceInCents/100\r\n    return priceInDollars.toFixed(2)\r\n  }\r\n\r\n  async pay(e) {\r\n    e.preventDefault() //to avoid reloading page\r\n    e.stopPropagation()\r\n    this.setState({\r\n      cardNumberAlert: false,\r\n      expiryDateAlert: false,\r\n      cvcAlert:false\r\n    })\r\n    if (this.state.cardNumber.length !== 16) {\r\n      this.setState({ cardNumberAlert: true })\r\n      return\r\n    }\r\n    if (this.state.cvc.length !== 3) {\r\n      this.setState({ cvcAlert: true })\r\n      return\r\n    }\r\n    if (!this.validateExpiryDate()) {\r\n      this.setState({ expiryDateAlert: true })\r\n      return\r\n    }\r\n\r\n      this.setState({ payLoading: true  })\r\n      const headers = {\r\n        Authorization: localStorage.getItem('token'),\r\n      }\r\n      const body ={\r\n        orderId: window.location.href.split('/')[4],\r\n        payment: {\r\n          amount:this.state.totalPrice,\r\n          currency:staticVariables.currency,\r\n          cardNumber:this.state.cardNumber,\r\n          expMonth:expMonth,\r\n          expYear:'20'+expYear,\r\n          cvc:this.state.cvc\r\n        }\r\n      }\r\n      await axios\r\n        .post(backendUrls.host + backendUrls.transaction.baseUri + backendUrls.transaction.api.charge ,body, {\r\n          headers: headers,\r\n        })\r\n        .then((response) => {\r\n          this.setState({\r\n            payLoading: false,\r\n            modalShow: true,\r\n            resMsg:response.data.msg\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          if(error.response && error.response.data && error.response.data.error)\r\n            toast.error(error.response.data.error)\r\n          else\r\n            toast.error(staticVariables.messages.somethingWrong)\r\n          this.setState({  payLoading: false })\r\n           \r\n        })\r\n    \r\n  }\r\n  callbackFunction = (value) => {\r\n    this.setState({ modalShow: value })\r\n    window.location.href = uri.order.replace(':id', window.location.href.split('/')[4])\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={Styles.bgImage}>\r\n        <Navbar />\r\n        <ToastContainer\r\n                          position=\"top-center\"\r\n                          autoClose={3000}\r\n                          hideProgressBar={false}\r\n                          newestOnTop={false}\r\n                          closeOnClick\r\n                          rtl={false}\r\n                          pauseOnFocusLoss\r\n                          draggable\r\n                          pauseOnHover\r\n                        />\r\n                      {this.state.loading?( <LoadingIcon type=\"spin\" color=\"#00ff00\" />):this.state.error?(<Error errorCode=\"404\" errorMessage=\"Couldn't find Order\" />):(\r\n        <div class=\"signin-background\" style={Styles.minHeight}>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                <div class=\"card card-signin my-5\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-center\">Pay</h5>\r\n                    <form class=\"form-signin\">\r\n                    <div class=\"form-label-group\">\r\n                        <label for=\"inputCardNumber\">Card Number</label>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <FormControl\r\n                            id=\"inputCardNumber\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Enter Card Number\"\r\n                            onChange={this.handleCardNumberChange}\r\n                            value={this.state.cardNumber}\r\n                            type='number'\r\n                            required\r\n                            autofocus\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"outline-dark\"\r\n                              disabled='true'\r\n                            >\r\n                                <CreditCardIcon />\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                        <Alert variant=\"danger\" show={this.state.cardNumberAlert}>\r\n                          {staticVariables.messages.invalidCardNumber}\r\n                        </Alert>\r\n                      </div>\r\n                      \r\n                      <br />\r\n                      <div style={{padding: '0px'}}>\r\n                      <div class=\"form-label-group\" style={{ width: '50%',float: 'left',padding: '30px'}}>\r\n                        <label for=\"inputCardNumber\">Expiry Date</label>\r\n                        <input\r\n                          id=\"inputCardNumber\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"mm/yy\"\r\n                          onChange={this.handleExpiryDateChange}\r\n                          type=\"text\"\r\n                          value={this.state.expiryDate}\r\n                          disabled={this.state.payLoading}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.expiryDateAlert}>\r\n                          {staticVariables.messages.invalidExpiryDate}\r\n                        </Alert>\r\n                      </div>\r\n                      <br />\r\n                      <div class=\"form-label-group\" style={{ width: '50%',float: 'left',padding: '5px'}}>\r\n                        <label for=\"inputCVC\">CVC</label>\r\n                        <input\r\n                          id=\"inputCVC\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter CVC\"\r\n                          onChange={this.handleCvcChange}\r\n                          type=\"number\"\r\n                          value={this.state.cvc}\r\n                          disabled={this.state.payLoading}\r\n                          required\r\n                          autofocus\r\n                        />\r\n                        <Alert variant=\"danger\" show={this.state.cvcAlert}>\r\n                          {staticVariables.messages.invalidCvc}\r\n                        </Alert>\r\n                      </div>\r\n                      </div>\r\n                      <br />\r\n                      <br />\r\n                      \r\n                      <button\r\n                        class=\"btn btn-lg btn-success btn-block text-uppercase\"\r\n                        type=\"submit\"\r\n                        disabled={this.state.payLoading}\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault()\r\n                          e.stopPropagation()\r\n                        }}\r\n                        onClick={(e) => this.pay(e)}\r\n                      >\r\n                        {!this.state.payLoading ? (\r\n                          `Pay (${this.itemPrice(this.state.totalPrice)}$)`\r\n                                                  ) : (\r\n                          <LoadingIcon color=\"#ffffff\" />\r\n                        )}\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <KeyModal\r\n                show={this.state.modalShow}\r\n                msg={this.state.resMsg}\r\n                parentCallback={this.callbackFunction}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n          <br />\r\n        </div>)}\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Pay\\SubscModal.js",["653"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nconst KeyModal = (props) => {\r\n  // const [show, setShow] = useState(props.show);\r\n  var show = props.show\r\n  const handleClose = () => \r\n    (sendDataToParentComponent(false))\r\n  const sendDataToParentComponent = (data) => {\r\n    props.parentCallback(data)\r\n  }\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        // onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          <Modal.Title>{props.msg}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <img src={staticVariables.imgSrc.payment} alt=\"Welcome\" width=\"450\" height=\"300\"/>\r\n        </Modal.Body>\r\n      </Modal>\r\n    )\r\n  \r\n}\r\n\r\nexport default KeyModal\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\UpdateInfo\\UpdateInfo.jsx",["654","655"],"import React, { Component } from 'react'\r\nimport Navbar from '../General/NavBar'\r\nimport Footer from '../General/Footer'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\nimport backendUrls from '../General/StaticVariables/backEndUrls.json'\r\nimport axios from 'axios'\r\nimport LoadingIcon from '../General/Loading.js'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff'\r\nimport { isLoggedIn, loginLocalStorage } from '../General/Functions'\r\nimport { Styles } from '../General/StaticVariables/Styles.js'\r\nimport uri from '../General/StaticVariables/uri.json'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport KeyModal from './SubscModal.js'\r\n\r\n\r\nexport default class UpdateInfo extends Component {\r\n  state = {\r\n    token: '',\r\n    username: '',\r\n    password: '',\r\n    newPassword:'',\r\n    passwordHidden: true,\r\n    loading: false,\r\n    alert: false,\r\n    updateUsername:false,\r\n    updatePassword:false,\r\n    alertMessage: staticVariables.messages.invalidUsernameOrPassword,\r\n    modalShow: false\r\n  }\r\n  updateInfo = async (e) => {\r\n    e.preventDefault() //to avoid reloading page\r\n    e.stopPropagation()\r\n    this.setState({ loading: true })\r\n    const body = {\r\n      username: localStorage.getItem('username'),\r\n      password: this.state.password,\r\n    }\r\n    await axios\r\n      .post(backendUrls.host + backendUrls.auth.baseUri + backendUrls.auth.api.login, body)\r\n      .then(async (res) => {\r\n\r\n        const headers = {\r\n          Authorization: res.data.data.token,\r\n        }\r\n        var body = {}\r\n        if(this.state.updateUsername){\r\n          body.username = this.state.username\r\n        }\r\n        if(this.state.updatePassword){\r\n          body.password = this.state.newPassword\r\n        }\r\n        await axios\r\n          .put(\r\n            backendUrls.host + backendUrls.user.baseUri + backendUrls.user.api.updateUser.replace(':id',res.data.data.userId) ,body, {\r\n              headers: headers,\r\n            }\r\n          )\r\n          .then((response) => {\r\n              this.setState({\r\n                loading: false\r\n              })\r\n              if(this.state.updateUsername)\r\n                localStorage.setItem('username', this.state.username)\r\n              if(this.state.updatePassword)\r\n                localStorage.setItem('password', this.state.newPassword)\r\n          })\r\n          .catch((error) => {\r\n            if(error.response && error.response.data && error.response.data.error)\r\n              toast.error(error.response.data.error)\r\n             else\r\n              toast.error(staticVariables.messages.somethingWrong)\r\n            this.setState({ loading: false })\r\n          })\r\n\r\n        this.setState({ loading: false,\r\n                        username: '',\r\n                        password: '',\r\n                        newPassword:'',\r\n                        updateUsername:false,\r\n                        updatePassword:false,\r\n                        modalShow: true})\r\n      })\r\n      .catch((error) => {\r\n        if(error.response && error.response.data && error.response.data.error)\r\n          this.setState({ loading: false, alert: true, alertMessage: error.response.data.error})\r\n        else\r\n          this.setState({ loading: false, alert: true, alertMessage: staticVariables.messages.somethingWrong})\r\n      })\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  passwordSwitchChanged() {\r\n    this.setState({ updatePassword: !this.state.updatePassword })\r\n  }\r\n\r\n  usernameSwitchChanged() {\r\n    this.setState({ updateUsername: !this.state.updateUsername })\r\n  }\r\n  callbackFunction = (value) => {\r\n    this.setState({ modalShow: value })\r\n    window.location.href = uri.update\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={Styles.bgImage}>\r\n        <div class=\"signin-background\">\r\n          <Navbar />\r\n          <ToastContainer\r\n                          position=\"top-center\"\r\n                          autoClose={3000}\r\n                          hideProgressBar={false}\r\n                          newestOnTop={false}\r\n                          closeOnClick\r\n                          rtl={false}\r\n                          pauseOnFocusLoss\r\n                          draggable\r\n                          pauseOnHover\r\n                        />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <div class=\"container\" style={Styles.minHeight}>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                <div class=\"card card-signin my-5\">\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title text-center\">Update Info</h5>\r\n                    <form class=\"form-signin\">\r\n                    <div class=\"form-label-group\">\r\n                        <label for=\"inputPassword\">Old Password</label>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <FormControl\r\n                            type={\r\n                              this.state.passwordHidden ? 'password' : 'text'\r\n                            }\r\n                            id=\"inputPassword\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"Old Password\"\r\n                            required\r\n                            value={this.state.password}\r\n                            onChange={(e) => {\r\n                              let { password } = this.state\r\n\r\n                              password = e.target.value\r\n\r\n                              this.setState({ password })\r\n                            }}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"outline-success\"\r\n                              onClick={() =>\r\n                                this.setState({\r\n                                  passwordHidden: !this.state.passwordHidden,\r\n                                })\r\n                              }\r\n                            >\r\n                              {this.state.passwordHidden ? (\r\n                                <VisibilityIcon />\r\n                              ) : (\r\n                                <VisibilityOffIcon />\r\n                              )}\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </div>\r\n                      <div class=\"form-label-group\">\r\n                        <Alert variant=\"danger\" show={this.state.alert}>\r\n                          {this.state.alertMessage}\r\n                        </Alert>\r\n                        \r\n                        <FormControlLabel\r\n                        control={<Switch onClick={()=>this.usernameSwitchChanged()} color=\"primary\" />}\r\n                        label=\"Update username\"\r\n                        labelPlacement=\"Update username\"\r\n                      />\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"inputKey\"\r\n                          class=\"form-control\"\r\n                          placeholder=\"Enter Your New Username\"\r\n                          required\r\n                          disabled={!this.state.updateUsername}\r\n                          autofocus\r\n                          value={this.state.username}\r\n                          onChange={(e) => {\r\n                            let { username } = this.state\r\n\r\n                            username = e.target.value\r\n\r\n                            this.setState({ username })\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <br />\r\n\r\n                      <div class=\"form-label-group\">\r\n                      <FormControlLabel\r\n                        control={<Switch  onClick={()=>this.passwordSwitchChanged()} color=\"primary\" />}\r\n                        label=\"Update Password\"\r\n                        labelPlacement=\"Update Password\"\r\n                      />\r\n                        <InputGroup className=\"mb-3\">\r\n                          <FormControl\r\n                            type={\r\n                              this.state.passwordHidden ? 'password' : 'text'\r\n                            }\r\n                            id=\"inputPassword\"\r\n                            class=\"form-control\"\r\n                            placeholder=\"New Password\"\r\n                            required\r\n                            disabled={!this.state.updatePassword}\r\n                            value={this.state.newPassword}\r\n                            onChange={(e) => {\r\n                              let { newPassword } = this.state\r\n\r\n                              newPassword = e.target.value\r\n\r\n                              this.setState({ newPassword })\r\n                            }}\r\n                          />\r\n                          <InputGroup.Append>\r\n                            <Button\r\n                              variant=\"outline-success\"\r\n                              onClick={() =>\r\n                                this.setState({\r\n                                  passwordHidden: !this.state.passwordHidden,\r\n                                })\r\n                              }\r\n                            >\r\n                              {this.state.passwordHidden ? (\r\n                                <VisibilityIcon />\r\n                              ) : (\r\n                                <VisibilityOffIcon />\r\n                              )}\r\n                            </Button>\r\n                          </InputGroup.Append>\r\n                        </InputGroup>\r\n                      </div>\r\n                      <button\r\n                        class=\"btn btn-lg btn-success btn-block \"\r\n                        type=\"submit\"\r\n                        disabled={this.state.loading}\r\n                        onSubmit={(e) => {\r\n                          e.preventDefault()\r\n                          e.stopPropagation()\r\n                        }}\r\n                        onClick={(e) => this.updateInfo(e)}\r\n                      >\r\n                        {!this.state.loading ? (\r\n                          'Update Info'\r\n                        ) : (\r\n                          <LoadingIcon color=\"#ffffff\" />\r\n                        )}\r\n                      </button>\r\n\r\n                     \r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              <KeyModal\r\n                show={this.state.modalShow}\r\n                parentCallback={this.callbackFunction}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\UpdateInfo\\SubscModal.js",["656","657"],"import React, { useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport staticVariables from '../General/StaticVariables/StaticVariables.json'\r\n\r\nconst KeyModal = (props) => {\r\n  // const [show, setShow] = useState(props.show);\r\n  var show = props.show\r\n  const handleClose = () => \r\n    (sendDataToParentComponent(false))\r\n  const sendDataToParentComponent = (data) => {\r\n    props.parentCallback(data)\r\n  }\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        // onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          <Modal.Title>Info Updated Successfully</Modal.Title>\r\n        </Modal.Header>\r\n      </Modal>\r\n    )\r\n  \r\n}\r\n\r\nexport default KeyModal\r\n","D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\OrderInfo.jsx",["658","659","660"],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\AllOrders.jsx",["661"],"D:\\Freelance\\E-commerce Demo\\FrontEnd\\E-commerce-demo\\src\\components\\Order\\AllOrdersData.jsx",["662","663","664","665","666","667","668","669","670","671","672"],{"ruleId":"673","replacedBy":"674"},{"ruleId":"675","replacedBy":"676"},{"ruleId":"677","severity":1,"message":"678","line":10,"column":8,"nodeType":"679","messageId":"680","endLine":10,"endColumn":14},{"ruleId":"677","severity":1,"message":"681","line":5,"column":26,"nodeType":"679","messageId":"680","endLine":5,"endColumn":31},{"ruleId":"677","severity":1,"message":"682","line":3,"column":22,"nodeType":"679","messageId":"680","endLine":3,"endColumn":36},{"ruleId":"677","severity":1,"message":"681","line":23,"column":26,"nodeType":"679","messageId":"680","endLine":23,"endColumn":31},{"ruleId":"677","severity":1,"message":"683","line":1,"column":28,"nodeType":"679","messageId":"680","endLine":1,"endColumn":36},{"ruleId":"677","severity":1,"message":"684","line":3,"column":8,"nodeType":"679","messageId":"680","endLine":3,"endColumn":18},{"ruleId":"677","severity":1,"message":"685","line":4,"column":8,"nodeType":"679","messageId":"680","endLine":4,"endColumn":23},{"ruleId":"677","severity":1,"message":"686","line":15,"column":9,"nodeType":"679","messageId":"680","endLine":15,"endColumn":19},{"ruleId":"687","severity":1,"message":"688","line":53,"column":17,"nodeType":"689","endLine":56,"endColumn":18},{"ruleId":"687","severity":1,"message":"688","line":82,"column":17,"nodeType":"689","endLine":85,"endColumn":18},{"ruleId":"687","severity":1,"message":"688","line":112,"column":17,"nodeType":"689","endLine":115,"endColumn":18},{"ruleId":"677","severity":1,"message":"690","line":127,"column":7,"nodeType":"679","messageId":"680","endLine":127,"endColumn":13},{"ruleId":"677","severity":1,"message":"691","line":16,"column":10,"nodeType":"679","messageId":"680","endLine":16,"endColumn":24},{"ruleId":"692","severity":1,"message":"693","line":90,"column":17,"nodeType":"689","endLine":90,"endColumn":68},{"ruleId":"692","severity":1,"message":"693","line":133,"column":17,"nodeType":"689","endLine":133,"endColumn":65},{"ruleId":"692","severity":1,"message":"693","line":176,"column":17,"nodeType":"689","endLine":176,"endColumn":68},{"ruleId":"692","severity":1,"message":"693","line":219,"column":17,"nodeType":"689","endLine":219,"endColumn":65},{"ruleId":"677","severity":1,"message":"694","line":285,"column":9,"nodeType":"679","messageId":"680","endLine":285,"endColumn":23},{"ruleId":"677","severity":1,"message":"691","line":17,"column":10,"nodeType":"679","messageId":"680","endLine":17,"endColumn":24},{"ruleId":"677","severity":1,"message":"695","line":10,"column":10,"nodeType":"679","messageId":"680","endLine":10,"endColumn":25},{"ruleId":"677","severity":1,"message":"696","line":11,"column":8,"nodeType":"679","messageId":"680","endLine":11,"endColumn":28},{"ruleId":"677","severity":1,"message":"691","line":12,"column":10,"nodeType":"679","messageId":"680","endLine":12,"endColumn":24},{"ruleId":"677","severity":1,"message":"681","line":12,"column":26,"nodeType":"679","messageId":"680","endLine":12,"endColumn":31},{"ruleId":"687","severity":1,"message":"688","line":85,"column":13,"nodeType":"689","endLine":88,"endColumn":14},{"ruleId":"677","severity":1,"message":"697","line":166,"column":7,"nodeType":"679","messageId":"680","endLine":166,"endColumn":16},{"ruleId":"677","severity":1,"message":"698","line":170,"column":7,"nodeType":"679","messageId":"680","endLine":170,"endColumn":17},{"ruleId":"677","severity":1,"message":"690","line":31,"column":7,"nodeType":"679","messageId":"680","endLine":31,"endColumn":13},{"ruleId":"677","severity":1,"message":"699","line":2,"column":8,"nodeType":"679","messageId":"680","endLine":2,"endColumn":13},{"ruleId":"677","severity":1,"message":"691","line":8,"column":10,"nodeType":"679","messageId":"680","endLine":8,"endColumn":24},{"ruleId":"677","severity":1,"message":"690","line":103,"column":7,"nodeType":"679","messageId":"680","endLine":103,"endColumn":13},{"ruleId":"677","severity":1,"message":"700","line":5,"column":8,"nodeType":"679","messageId":"680","endLine":5,"endColumn":13},{"ruleId":"677","severity":1,"message":"685","line":6,"column":8,"nodeType":"679","messageId":"680","endLine":6,"endColumn":23},{"ruleId":"677","severity":1,"message":"681","line":8,"column":10,"nodeType":"679","messageId":"680","endLine":8,"endColumn":15},{"ruleId":"677","severity":1,"message":"701","line":24,"column":8,"nodeType":"679","messageId":"680","endLine":24,"endColumn":16},{"ruleId":"677","severity":1,"message":"690","line":127,"column":7,"nodeType":"679","messageId":"680","endLine":127,"endColumn":13},{"ruleId":"677","severity":1,"message":"702","line":2,"column":10,"nodeType":"679","messageId":"680","endLine":2,"endColumn":20},{"ruleId":"677","severity":1,"message":"703","line":2,"column":8,"nodeType":"679","messageId":"680","endLine":2,"endColumn":12},{"ruleId":"677","severity":1,"message":"702","line":2,"column":10,"nodeType":"679","messageId":"680","endLine":2,"endColumn":20},{"ruleId":"704","severity":1,"message":"705","line":66,"column":5,"nodeType":"706","endLine":66,"endColumn":28},{"ruleId":"704","severity":1,"message":"705","line":71,"column":5,"nodeType":"706","endLine":71,"endColumn":28},{"ruleId":"704","severity":1,"message":"705","line":75,"column":5,"nodeType":"706","endLine":75,"endColumn":28},{"ruleId":"687","severity":1,"message":"688","line":292,"column":27,"nodeType":"689","endLine":295,"endColumn":28},{"ruleId":"673","replacedBy":"707"},{"ruleId":"675","replacedBy":"708"},{"ruleId":"677","severity":1,"message":"681","line":5,"column":26,"nodeType":"679","messageId":"680","endLine":5,"endColumn":31},{"ruleId":"687","severity":1,"message":"688","line":81,"column":13,"nodeType":"689","endLine":84,"endColumn":14},{"ruleId":"677","severity":1,"message":"709","line":6,"column":8,"nodeType":"679","messageId":"680","endLine":6,"endColumn":18},{"ruleId":"687","severity":1,"message":"688","line":51,"column":17,"nodeType":"689","endLine":54,"endColumn":18},{"ruleId":"687","severity":1,"message":"688","line":77,"column":17,"nodeType":"689","endLine":80,"endColumn":18},{"ruleId":"687","severity":1,"message":"688","line":104,"column":17,"nodeType":"689","endLine":107,"endColumn":18},{"ruleId":"704","severity":1,"message":"705","line":68,"column":5,"nodeType":"706","endLine":68,"endColumn":28},{"ruleId":"704","severity":1,"message":"705","line":73,"column":5,"nodeType":"706","endLine":73,"endColumn":28},{"ruleId":"704","severity":1,"message":"705","line":77,"column":5,"nodeType":"706","endLine":77,"endColumn":28},{"ruleId":"687","severity":1,"message":"688","line":318,"column":27,"nodeType":"689","endLine":321,"endColumn":28},{"ruleId":"677","severity":1,"message":"685","line":5,"column":8,"nodeType":"679","messageId":"680","endLine":5,"endColumn":23},{"ruleId":"710","severity":1,"message":"711","line":33,"column":3,"nodeType":"712","messageId":"713","endLine":33,"endColumn":13},{"ruleId":"714","severity":1,"message":"715","line":46,"column":5,"nodeType":"716","endLine":46,"endColumn":7,"suggestions":"717"},{"ruleId":"718","severity":1,"message":"719","line":79,"column":11,"nodeType":"720","endLine":79,"endColumn":42},{"ruleId":"673","replacedBy":"721"},{"ruleId":"675","replacedBy":"722"},{"ruleId":"677","severity":1,"message":"723","line":5,"column":3,"nodeType":"679","messageId":"680","endLine":5,"endColumn":7},{"ruleId":"677","severity":1,"message":"724","line":10,"column":3,"nodeType":"679","messageId":"680","endLine":10,"endColumn":9},{"ruleId":"718","severity":1,"message":"719","line":69,"column":11,"nodeType":"720","endLine":69,"endColumn":47},{"ruleId":"677","severity":1,"message":"725","line":17,"column":8,"nodeType":"679","messageId":"680","endLine":17,"endColumn":16},{"ruleId":"718","severity":1,"message":"719","line":105,"column":11,"nodeType":"720","endLine":105,"endColumn":47},{"ruleId":"677","severity":1,"message":"723","line":5,"column":3,"nodeType":"679","messageId":"680","endLine":5,"endColumn":7},{"ruleId":"677","severity":1,"message":"724","line":10,"column":3,"nodeType":"679","messageId":"680","endLine":10,"endColumn":9},{"ruleId":"718","severity":1,"message":"719","line":85,"column":11,"nodeType":"720","endLine":85,"endColumn":47},{"ruleId":"673","replacedBy":"726"},{"ruleId":"675","replacedBy":"727"},{"ruleId":"677","severity":1,"message":"685","line":7,"column":8,"nodeType":"679","messageId":"680","endLine":7,"endColumn":23},{"ruleId":"677","severity":1,"message":"728","line":9,"column":8,"nodeType":"679","messageId":"680","endLine":9,"endColumn":14},{"ruleId":"677","severity":1,"message":"678","line":10,"column":8,"nodeType":"679","messageId":"680","endLine":10,"endColumn":14},{"ruleId":"677","severity":1,"message":"683","line":1,"column":17,"nodeType":"679","messageId":"680","endLine":1,"endColumn":25},{"ruleId":"710","severity":1,"message":"711","line":33,"column":3,"nodeType":"712","messageId":"713","endLine":33,"endColumn":13},{"ruleId":"677","severity":1,"message":"685","line":6,"column":8,"nodeType":"679","messageId":"680","endLine":6,"endColumn":23},{"ruleId":"677","severity":1,"message":"685","line":6,"column":8,"nodeType":"679","messageId":"680","endLine":6,"endColumn":23},{"ruleId":"677","severity":1,"message":"729","line":14,"column":9,"nodeType":"679","messageId":"680","endLine":14,"endColumn":19},{"ruleId":"677","severity":1,"message":"730","line":14,"column":20,"nodeType":"679","messageId":"680","endLine":14,"endColumn":37},{"ruleId":"731","severity":1,"message":"732","line":57,"column":19,"nodeType":"733","messageId":"713","endLine":57,"endColumn":21},{"ruleId":"731","severity":1,"message":"732","line":57,"column":54,"nodeType":"733","messageId":"713","endLine":57,"endColumn":56},{"ruleId":"731","severity":1,"message":"732","line":59,"column":19,"nodeType":"733","messageId":"713","endLine":59,"endColumn":21},{"ruleId":"731","severity":1,"message":"732","line":59,"column":54,"nodeType":"733","messageId":"713","endLine":59,"endColumn":56},{"ruleId":"677","severity":1,"message":"683","line":1,"column":17,"nodeType":"679","messageId":"680","endLine":1,"endColumn":25},{"ruleId":"677","severity":1,"message":"729","line":14,"column":10,"nodeType":"679","messageId":"680","endLine":14,"endColumn":20},{"ruleId":"677","severity":1,"message":"730","line":14,"column":22,"nodeType":"679","messageId":"680","endLine":14,"endColumn":39},{"ruleId":"677","severity":1,"message":"683","line":1,"column":17,"nodeType":"679","messageId":"680","endLine":1,"endColumn":25},{"ruleId":"677","severity":1,"message":"685","line":3,"column":8,"nodeType":"679","messageId":"680","endLine":3,"endColumn":23},{"ruleId":"677","severity":1,"message":"734","line":16,"column":8,"nodeType":"679","messageId":"680","endLine":16,"endColumn":16},{"ruleId":"677","severity":1,"message":"735","line":17,"column":8,"nodeType":"679","messageId":"680","endLine":17,"endColumn":22},{"ruleId":"677","severity":1,"message":"736","line":106,"column":11,"nodeType":"679","messageId":"680","endLine":106,"endColumn":15},{"ruleId":"677","severity":1,"message":"685","line":6,"column":8,"nodeType":"679","messageId":"680","endLine":6,"endColumn":23},{"ruleId":"677","severity":1,"message":"737","line":3,"column":8,"nodeType":"679","messageId":"680","endLine":3,"endColumn":12},{"ruleId":"677","severity":1,"message":"738","line":4,"column":8,"nodeType":"679","messageId":"680","endLine":4,"endColumn":11},{"ruleId":"677","severity":1,"message":"691","line":9,"column":10,"nodeType":"679","messageId":"680","endLine":9,"endColumn":24},{"ruleId":"677","severity":1,"message":"739","line":11,"column":8,"nodeType":"679","messageId":"680","endLine":11,"endColumn":30},{"ruleId":"677","severity":1,"message":"740","line":12,"column":10,"nodeType":"679","messageId":"680","endLine":12,"endColumn":16},{"ruleId":"677","severity":1,"message":"741","line":25,"column":8,"nodeType":"679","messageId":"680","endLine":25,"endColumn":29},{"ruleId":"677","severity":1,"message":"742","line":26,"column":8,"nodeType":"679","messageId":"680","endLine":26,"endColumn":27},{"ruleId":"677","severity":1,"message":"743","line":341,"column":10,"nodeType":"679","messageId":"680","endLine":341,"endColumn":14},{"ruleId":"677","severity":1,"message":"744","line":341,"column":16,"nodeType":"679","messageId":"680","endLine":341,"endColumn":23},{"ruleId":"687","severity":1,"message":"688","line":357,"column":27,"nodeType":"689","endLine":357,"endColumn":68},{"ruleId":"687","severity":1,"message":"688","line":360,"column":9,"nodeType":"689","endLine":360,"endColumn":68},"no-native-reassign",["745"],"no-negated-in-lhs",["746"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","'StylesProvider' is defined but never used.","'useState' is defined but never used.","'PublicIcon' is defined but never used.","'staticVariables' is defined but never used.","'handleShow' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Styles' is assigned a value but never used.","'ToastContainer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'handleComplete' is assigned a value but never used.","'CopyToClipboard' is defined but never used.","'FileCopyOutlinedIcon' is defined but never used.","'lineSpace' is assigned a value but never used.","'sideByside' is assigned a value but never used.","'Alert' is defined but never used.","'axios' is defined but never used.","'SendIcon' is defined but never used.","'makeStyles' is defined but never used.","'Link' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["745"],["746"],"'PeopleIcon' is defined but never used.","no-dupe-keys","Duplicate key 'centered75'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'day'. Either include it or remove the dependency array.","ArrayExpression",["747"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["745"],["746"],"'Cell' is defined but never used.","'Legend' is defined but never used.","'EditIcon' is defined but never used.",["745"],["746"],"'Navbar' is defined but never used.","'isLoggedIn' is defined but never used.","'loginLocalStorage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'body' is assigned a value but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'RemoveShoppingCartIcon' is defined but never used.","'Button' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'KeyboardArrowUpIcon' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"748","fix":"749"},"Update the dependencies array to be: [day]",{"range":"750","text":"751"},[1452,1454],"[day]"]